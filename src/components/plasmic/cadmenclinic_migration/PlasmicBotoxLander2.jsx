// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: fpxTiFS69ULcX4wDGEfw3c
// Component: Npe59kGyeDl0
import * as React from "react";
import Head from "next/head";
import { useRouter } from "next/router";
import {
  PlasmicImg as PlasmicImg__,
  Stack as Stack__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateStateOnChangeProp,
  generateStateValueProp,
  hasVariant,
  set as $stateSet,
  useDollarState
} from "@plasmicapp/react-web";
import { useDataEnv } from "@plasmicapp/react-web/lib/host";
import TopNav from "../../TopNav"; // plasmic-import: xBvtLE-eO4gb/component
import Button from "../../Button"; // plasmic-import: 0o-OkGmTYJg3/component
import ReviewsRatingPill from "../../ReviewsRatingPill"; // plasmic-import: lUTkTuQcsEcx/component
import BenefitsOfBotoxCard from "../../BenefitsOfBotoxCard"; // plasmic-import: NylQq7mzP_E5/component
import TestimonialsSlider from "@/components/TestimonialsSlider/TestimonialsSlider"; // plasmic-import: J0SSSRogRoTR/codeComponent
import TestimonialCard from "../../TestimonialCard"; // plasmic-import: zWVJ2Qd7n2nR/component
import TextToggler from "../../TextToggler"; // plasmic-import: nk356y6CCF9w/component
import BotoxProcessCard from "../../BotoxProcessCard"; // plasmic-import: 7fDdA2kY52_t/component
import AffordableBotoxCard from "../../AffordableBotoxCard"; // plasmic-import: dCCKAyC8oXyh/component
// import FaceSection from "../../FaceSection"; // plasmic-import: dOVgE0OgS0yG/component
import AreasInteractive from "../../AreasInteractive"; // plasmic-import: cNLJfmXsSSOr/component
import BotoxResultCard from "../../BotoxResultCard"; // plasmic-import: LkkGmqnkkLRj/component
import SelectPill from "../../SelectPill"; // plasmic-import: XgOD49Zg0vP7/component
import HowItWorksCard from "../../HowItWorksCard"; // plasmic-import: w7EJDoU6NMVc/component
import AgeGroupsCard from "../../AgeGroupsCard"; // plasmic-import: 0IByburiocI3/component
import IconLayeredCircles from "../../IconLayeredCircles"; // plasmic-import: otc6Jw_feodx/component
import Faq from "../../Faq"; // plasmic-import: kXqZTEGKWOeX/component
import BotoxMythsSlider from "@/components/BotoxMythsSlider/BotoxMythsSlider"; // plasmic-import: 7M8CJgEEKvIi/codeComponent
import BotoxMythsCard from "../../BotoxMythsCard"; // plasmic-import: 4aj6TPf-GBTB/component
import OurLocationSection from "../../OurLocationSection"; // plasmic-import: 90jT_0Y9mL-p/component
import FooterNew from "../../FooterNew"; // plasmic-import: NE5t6IteXed-/component
import { useScreenVariants as useScreenVariants_4IUcgkiijTv2 } from "../blank_website/PlasmicGlobalVariant__Screen"; // plasmic-import: 4iUCGKIIJTv2/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import projectcss from "../blank_website/plasmic.module.css"; // plasmic-import: fpxTiFS69ULcX4wDGEfw3c/projectcss
import sty from "./PlasmicBotoxSeo.module.css"; // plasmic-import: Npe59kGyeDl0/css
import TimeSvgIcon from "./icons/PlasmicIcon__TimeSvg"; // plasmic-import: zfqY32R6mG7W/icon
import Face2SvgIcon from "./icons/PlasmicIcon__Face2Svg"; // plasmic-import: na4dw5YDiVRa/icon
import HeartSvg3Icon from "./icons/PlasmicIcon__HeartSvg3"; // plasmic-import: Y1Pl_F2w77Si/icon
import TimeSvg3Icon from "./icons/PlasmicIcon__TimeSvg3"; // plasmic-import: ncO_R5hfk1Yu/icon
import IconFace2Icon from "./icons/PlasmicIcon__IconFace2"; // plasmic-import: XXHGqwEaOKMh/icon
import HeartSvg4Icon from "./icons/PlasmicIcon__HeartSvg4"; // plasmic-import: QQ0zzfq_LES4/icon
import PointIcon from "./icons/PlasmicIcon__Point"; // plasmic-import: dMjm7kjmXw_d/icon

import AffordableHairRestoration from "@/components/AffordableHairRestoration";
import HairLandingHero from "@/components/HairLandingHero";
import WhyOurPatientsSlider from "@/components/WhyOurPatientsSlider/WhyOurPatientsSlider";
import AlternatingInfoCard from "@/components/AlternatingInfoCard/AlternatingInfoCard";

import { useWindowSize } from 'react-use'

createPlasmicElementProxy;

export const PlasmicBotoxLander2__VariantProps = new Array();

export const PlasmicBotoxLander2__ArgProps = new Array();

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicBotoxLander2__RenderFunc(props) {
  const section8cards = [
    {
      id: 1,
      icon: "verified",
      img: "/media/services/ivy-1.jpg",
      title: "The Best Hair Restoration Treatments:\nWhy Clients Choose CADMEN Clinic",
      description: "When it comes to hair restoration, clients choose CADMEN Clinic for our commitment to quality, safety, and exception results. Letâ€™s explore what sets CADMEN Clinic apart and why so many clients consider us the go-to for natural hair restoration.",
      points: [
        {
          heading: "Expertise & Precision of Our Skilled Injections"
        },
        {
          heading: "Comprehensive Consultation Process"
        },
        {
          heading: "State-of-the-Art Facility"
        },
        {
          heading: "Commitment to Safety & Quality" 
        },
        {
          heading: "Transparent Pricing"
        }
      ]
    },
    {
      id: 2,
      icon: "sparkle",
      img: "/media/services/ivy-2.jpg",
      title: "Real Client Transformations",
      description: "We're proud of the incredible transformations our clients achieve with our treatments, and our before-and-after gallery showcases the natural, impactful results our injectors create. By addressing each client's unique hair goals and concerns, we're able to deliver outcomes that exceed expectations.",
      points: [
        {
          heading: "Before and After Gallery",
          subheading: "Our gallery features real clients who have achieved exceptional hair re-growth and prevented further hair loss."
        },
        {
          heading: "Client Testimonials",
          subheading: "Many clients leave glowing testimonials about their experiences, highlighting the professionalism, care, and expertise of our team."
        }
      ]
    },
    {
      id: 3,
      icon: "portrait",
      img: "/media/services/ivy-3.jpg",
      title: "Expertise and Precision of Our Skilled Injectors",
      description: "At CADMEN Clinic, hair restoration treatments are administered by experienced, licensed injectors who specialize in hair growth. Our injectors have extensive training in hair and advanced injection techniques, ensuring that every treatment is both safe and precisely tailored to your unique features.",
      points: [
        {
          heading: "Personalized Approach",
          subheading: "Our injectors take the time to understand your goals, whether you're looking for a subtle refresh or a more dramatic improvement."
        },
        {
          heading: "Natural Results",
          subheading: "We prioritize a natural look, only offering 100% natural treatments to give you the highest-quality result."
        },
        {
          heading: "Experienced Team",
          subheading: "With years of experience in cosmetic injectables, our team has a deep understanding of how to customize our treatments for each client's needs."
        }
      ]
    },
    {
      id: 4,
      icon: "headset",
      img: "/media/services/ivy-4.jpg",
      title: "Comprehensive Consultation Process",
      description: "We believe that a successful hair restoration experience starts with a thorough consultation. During your initial appointment, we take the time to assess your scalp, discuss your hair goals, and explain our treatments in detail. This personalized approach helps us create a treatment plan tailored to your needs.",
      points: [
        {
          heading: "Detailed Assessment",
          subheading: "We analyze your hair type, scalp, and specific concerns to ensure which hair restoration treatment is right for you."
        },
        {
          heading: "Goal-Setting",
          subheading: "Our team works with you to establish realistic goals and answer any questions, so you feel confident and informed."
        },
        {
          heading: "Transparent Communication",
          subheading: "We explain all aspects of the procedure, from the expected results to post-care and maintenance."
        }
      ]
    },
    {
      id: 5,
      icon: "heart",
      img: "/media/services/ivy-5.jpg",
      title: "State-of-the-Art Facility and \nComfort-Focused Experience",
      description: "Our medspa is designed to provide a relaxing and luxurious experience from the moment you walk in. We use advanced tools and techniques to deliver the highest level of care in a clean, modern, and comfortable environment.",
      points: [
        {
          heading: "Advanced Technology",
          subheading: "Our facility is equipped with cutting-edge tools that enhance the hair restoration experience, ensuring precise and effective treatments."
        },
        {
          heading: "Client-Centered Atmosphere",
          subheading: "We prioritize comfort and confidentiality, creating an environment where clients feel at ease."
        },
        {
          heading: "Safety Standards",
          subheading: "We adhere to the highest safety protocols to ensure a safe experience with every visit."
        }
      ]
    },
    {
      id: 6,
      icon: "syringe",
      img: "/media/services/ivy-1.jpg",
      title: "Commitment to Safety and Quality",
      description: "Safety is a top priority at CADMEN Clinic. Our injectors follow strict safety protocols, and we only use approved solutions from trusted manufacturers. With our commitment to the highest standards, you can rest assured that you're in safe, professional hands.",
      points: [
        {
          heading: "Certified Providers",
          subheading: "Our team is fully certified in Botox administration, ensuring that each injector has the skills and knowledge required to deliver safe and effective treatments."
        },
        {
          heading: "Health Canada-Approved Product",
          subheading: "We use authentic, Health Canada-approved solutions to provide you with the best and safest results."
        },
        {
          heading: "Stringent Protocols",
          subheading: "From sterilization to injection techniques, we follow rigorous protocols to ensure your safety and satisfaction."
        }
      ]
    },
    {
      id: 7,
      icon: "moneybag",
      img: "/media/services/ivy-2.jpg",
      title: "Transparent Pricing",
      description: "At CADMEN Clinic, we believe in clear, upfront pricing for all of our services. Our clients appreciate knowing exactly what to expect in terms of cost, with no hidden fees. Plus, we offer a membership program to reward our clients for their continued trust in us.",
      points: [
        {
          heading: "Transparent Pricing",
          subheading: "Our pricing is straightforward, and we're happy to provide an estimate during your consultation."
        },
        {
          heading: "Exclusive Discounts",
          subheading: "New patients receive <strong>50% off their first treatment and exclusive package discounts</strong>."
        }
      ]

    }
  ];

  const { width: windowWidth, height: windowHeight } = useWindowSize();
  
  const { variants, overrides, forNode } = props;
  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );
  const $props = {
    ...args,
    ...variants
  };
  const __nextRouter = useNextRouter();
  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const stateSpecs = React.useMemo(
    () => [
      {
        path: "selectedArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Forehead"
      },
      {
        path: "areasList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            name: "Forehead",
            range: "$100 - $200",
            units: "10-20 units",
            face_dot: { left: "51.5%", top: "10%" }
          },
          {
            name: "Brow Lift",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "67%", top: "22%" }
          },
          {
            name: "Crow's Feet",
            range: "$50 - $150",
            units: "5-15 units",
            face_dot: { left: "75%", top: "37%" }
          },
          {
            name: "11'S",
            range: "$200 - $300",
            units: "20-30 units",
            face_dot: { left: "51.5%", top: "27%" }
          },
          {
            name: "Nasolabial Folds",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "36%", top: "61%" }
          },
          {
            name: "Gummy Smile",
            range: "$100",
            units: "Varies",
            face_dot: { left: "49%", top: "65%" }
          },
          {
            name: "Lip Flip",
            range: "$125",
            units: "Varies",
            face_dot: { left: "58%", top: "73%" }
          },
          {
            name: "Chin Dimpling",
            range: "$40 - $100",
            units: "4-10 units",
            face_dot: { left: "51.5%", top: "91%" }
          },
          {
            name: "Masseter",
            range: "$200 - $400",
            units: "20-40 units",
            face_dot: { left: "65%", top: "63%" }
          }
        ]
      },
      {
        path: "botoxResultsList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            title: "Metabolism",
            description:
              "People with faster metabolisms may find that their Botox wears off quicker.",
            icon: "/plasmic/image_lab_2024/images/icon-person2.svg",
            image: "/plasmic/image_lab_2024/images/image26.jpg"
          },
          {
            title: "Treatment Area",
            description:
              "Areas with larger muscles, such as the jaw, may break down Botox more quickly.",
            icon: "/plasmic/image_lab_2024/images/icon-person.svg",
            image: "/plasmic/image_lab_2024/images/image38.jpg"
          },
          {
            title: "Aftercare and Lifestyle",
            description:
              "Avoiding intense exercise, sun exposure & facial massages immediately after treatment can help prolong results.",
            icon: "/plasmic/image_lab_2024/images/icon-heart.svg",
            image: "/plasmic/image_lab_2024/images/imagePng57.png"
          }
        ]
      },
      {
        path: "botoxResultArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Metabolism"
      },
      {
        path: "ageGroupsList",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            years: "20 years",
            title: "Botox in Your 20s: Preventative Measures",
            description:
              "In your 20s, you may not yet see prominent wrinkles or lines, but subtle changes often begin around this age. Many people start with preventative Botox, targeting areas where dynamic lines\u2014caused by repeated facial movements\u2014are beginning to form. The goal of preventative Botox is to prevent lines from becoming deeply etched in the skin as you age.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "Forehead lines, frown lines between the brows (glabellar lines), and crow\u2019s feet."
              },
              {
                title: "Benefits:",
                description:
                  "Botox helps minimize the formation of fine lines before they settle into deeper wrinkles, preserving a smooth complexion."
              },
              {
                title: "Fun Fact:",
                description:
                  "Preventative Botox doesn\u2019t mean you won\u2019t need Botox later; it just means you may need it less frequently or in smaller doses as you age."
              }
            ]
          },
          {
            years: "30 years",
            title: "Botox in Your 30s: Early Treatment for Fine Lines",
            description:
              "By your 30s, fine lines may have started to develop, especially if you're prone to frequent expressions like squinting or frowning. Botox treatments at this age are focused on smoothing out these early signs of aging while preventing them from getting deeper.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "The forehead, between the eyebrows, and around the eyes."
              },
              {
                title: "Benefits:",
                description:
                  "Botox at this stage can reduce the appearance of existing fine lines and provide a smoother, refreshed look. Regular treatments can help maintain this youthful appearance."
              },
              {
                title: "Fun Fact:",
                description:
                  "Many people in their 30s find that Botox every 3-6 months gives the best results, depending on how quickly their body metabolizes the product."
              }
            ]
          },
          {
            years: "40 years",
            title: "Botox in Your 40s: Managing Dynamic and Static Wrinkles",
            description:
              "In your 40s, Botox can address more pronounced wrinkles, often caused by years of repeated expressions and sun exposure. While some wrinkles may have settled in, Botox can still soften these lines, giving you a more youthful look.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "Dynamic wrinkles (those visible when moving your face) around the eyes, forehead, and mouth, as well as some static wrinkles that are visible at rest."
              },
              {
                title: "Benefits:",
                description:
                  "By targeting dynamic wrinkles, Botox can help reduce their prominence. Additionally, Botox may be paired with other treatments, like dermal fillers, to provide a fuller rejuvenation effect for static lines."
              },
              {
                title: "Fun Fact:",
                description:
                  "Many clients in their 40s opt for Botox every 3-4 months to maintain results."
              }
            ]
          },
          {
            years: "50 years",
            title: "Botox in Your 50s and Beyond Smoothing Deep Lines",
            description:
              "In your 50s and beyond, Botox can still provide beautiful results, often as part of a larger anti-aging regimen. At this stage, Botox is commonly combined with other aesthetic treatments, such as dermal fillers or laser therapies, to address deeper lines and overall skin laxity.",
            items: [
              {
                title: "Common Treatment Areas:",
                description:
                  "Areas with deeper wrinkles, such as the forehead, around the eyes, and near the mouth."
              },
              {
                title: "Benefits:",
                description:
                  "Botox in these areas helps to reduce the appearance of deep lines, and when paired with other treatments, it can create a lifted, youthful look."
              },
              {
                title: "Recommended Approach:",
                description:
                  "A combination of Botox, fillers, and possibly laser treatments can work synergistically to provide natural and comprehensive facial rejuvenation."
              }
            ]
          }
        ]
      },
      {
        path: "ageGroupsArea",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "20 years"
      },
      {
        path: "areasInteractive.data",
        type: "private",
        variableType: "array",
        initFunc: ({ $props, $state, $queries, $ctx }) => [
          {
            name: "Forehead",
            range: "$100 - $200",
            units: "10-20 units",
            face_dot: { left: "51.5%", top: "10%" }
          },
          {
            name: "Brow Lift",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "67%", top: "22%" }
          },
          {
            name: "Crow's Feet",
            range: "$50 - $150",
            units: "5-15 units",
            face_dot: { left: "75%", top: "37%" }
          },
          {
            name: "11'S",
            range: "$200 - $300",
            units: "20-30 units",
            face_dot: { left: "51.5%", top: "27%" }
          },
          {
            name: "Nasolabial Folds",
            range: "$50 - $100",
            units: "5-10 units",
            face_dot: { left: "36%", top: "61%" }
          },
          {
            name: "Gummy Smile",
            range: "$100",
            units: "Varies",
            face_dot: { left: "49%", top: "65%" }
          },
          {
            name: "Lip Flip",
            range: "$125",
            units: "Varies",
            face_dot: { left: "58%", top: "73%" }
          },
          {
            name: "Chin Dimpling",
            range: "$40 - $100",
            units: "4-10 units",
            face_dot: { left: "51.5%", top: "91%" }
          },
          {
            name: "Masseter",
            range: "$200 - $400",
            units: "20-40 units",
            face_dot: { left: "65%", top: "63%" }
          }
        ]
      },
      {
        path: "areasInteractive.selected",
        type: "private",
        variableType: "text",
        initFunc: ({ $props, $state, $queries, $ctx }) => "Forehead"
      }
    ],

    [$props, $ctx, $refs]
  );
  const $state = useDollarState(stateSpecs, {
    $props,
    $ctx,
    $queries: {},
    $refs
  });
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_4IUcgkiijTv2()
  });
  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicBotoxLander2.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicBotoxLander2.pageMetadata.title}
        />

        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicBotoxLander2.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            sty.root
          )}
        >

          {/* 1. hero page */}
          <HairLandingHero/>
          {/* <section
            data-plasmic-name={"topBotoxServicesSection"}
            data-plasmic-override={overrides.topBotoxServicesSection}
            className={classNames(projectcss.all, sty.topBotoxServicesSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__zV9GF)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"prices"}
                data-plasmic-override={overrides.prices}
                hasGap={true}
                className={classNames(projectcss.all, sty.prices)}
              >
                <div
                  data-plasmic-name={"heading"}
                  data-plasmic-override={overrides.heading}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.heading
                  )}
                >
                  {"$14.00"}
                </div>
                <Stack__
                  as={"div"}
                  data-plasmic-name={"price"}
                  data-plasmic-override={overrides.price}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.price)}
                >
                  <div
                    data-plasmic-name={"heading2"}
                    data-plasmic-override={overrides.heading2}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.heading2
                    )}
                  >
                    {"$9.99"}
                  </div>
                  <div
                    data-plasmic-name={"heading3"}
                    data-plasmic-override={overrides.heading3}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.heading3
                    )}
                  >
                    {"/unit botox"}
                  </div>
                </Stack__>
                <div
                  data-plasmic-name={"heading4"}
                  data-plasmic-override={overrides.heading4}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.heading4
                  )}
                >
                  {"new patients deal"}
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___7GAj3)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__oVJzR)}
                >
                  <div
                    data-plasmic-name={"heading5"}
                    data-plasmic-override={overrides.heading5}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.heading5
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h1
                            data-plasmic-name={"h1"}
                            data-plasmic-override={overrides.h1}
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "mobileOnly"
                            ) ? (
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{
                                    color: "#9a7f71",
                                    fontStyle: "italic"
                                  }}
                                >
                                  {"Top Botox Services"}
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#080909" }}
                                >
                                  {"in Chicago"}
                                </span>
                              </React.Fragment>
                            ) : (
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{
                                    color: "#9a7f71",
                                    fontStyle: "italic"
                                  }}
                                >
                                  {"Top Botox Services"}
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#080909" }}
                                >
                                  {" in Chicago"}
                                </span>
                              </React.Fragment>
                            )}
                          </h1>
                        }

                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <React.Fragment>{""}</React.Fragment>
                        {
                          <h1
                            data-plasmic-name={"h1"}
                            data-plasmic-override={overrides.h1}
                            className={classNames(
                              projectcss.all,
                              projectcss.h1,
                              projectcss.__wab_text,
                              sty.h1
                            )}
                          >
                            {hasVariant(
                              globalVariants,
                              "screen",
                              "mobileOnly"
                            ) ? (
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{
                                    color: "#9a7f71",
                                    fontStyle: "italic"
                                  }}
                                >
                                  {"Top Botox Services"}
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#080909" }}
                                >
                                  {"in Chicago"}
                                </span>
                              </React.Fragment>
                            ) : (
                              <React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{
                                    color: "#9a7f71",
                                    fontStyle: "italic"
                                  }}
                                >
                                  {"Top Botox Services"}
                                </span>
                                <React.Fragment>{"\n"}</React.Fragment>
                                <span
                                  className={
                                    "plasmic_default__all plasmic_default__span"
                                  }
                                  style={{ color: "#080909" }}
                                >
                                  {" in Chicago"}
                                </span>
                              </React.Fragment>
                            )}
                          </h1>
                        }

                        <React.Fragment>{""}</React.Fragment>
                      </React.Fragment>
                    )}
                  </div>
                  <div
                    data-plasmic-name={"supportingText"}
                    data-plasmic-override={overrides.supportingText}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.supportingText
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#535556" }}
                        >
                          {
                            "Enhance your confidence with Botox treatments in Chicago at ImageLab. "
                          }
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#535556" }}
                        >
                          {
                            "Enhance your confidence with Botox treatments in Chicago at ImageLab. Discover smoother, more youthful-looking skin with personalized care from our expert team, exclusive offers, and premium-quality results tailored just for you."
                          }
                        </span>
                      </React.Fragment>
                    )}
                  </div>
                </Stack__>
              </Stack__>
              <div className={classNames(projectcss.all, sty.freeBox__lXiYo)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__m842O)}
                  displayHeight={"232px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng6.png",
                    fullWidth: 485,
                    fullHeight: 465,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__p0IUr
                  )}
                >
                  {"Youthful Skin"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__dZhtS
                  )}
                >
                  {"Beauty Enhancement"}
                </div>
              </div>
              <Button
                data-plasmic-name={"topBotoxServicesButton"}
                data-plasmic-override={overrides.topBotoxServicesButton}
                className={classNames(
                  "__wab_instance",
                  sty.topBotoxServicesButton
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__c4Pe
                  )}
                >
                  {"Book Now"}
                </div>
              </Button>
              <ReviewsRatingPill
                data-plasmic-name={"reviewsRatingPill"}
                data-plasmic-override={overrides.reviewsRatingPill}
                className={classNames("__wab_instance", sty.reviewsRatingPill)}
              />

              <div className={classNames(projectcss.all, sty.freeBox__gyOeq)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__vvEMp)}
                  displayHeight={"292px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng3.png",
                    fullWidth: 568,
                    fullHeight: 584,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cw7
                  )}
                >
                  {"Youthful Skin"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___4Fnx
                  )}
                >
                  {"Beauty Enhancement"}
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__iw1Li)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__sPk1W)}
                  displayHeight={"292px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"auto"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng4.png",
                    fullWidth: 526,
                    fullHeight: 584,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___5TBjx
                  )}
                >
                  {"Confidence Boost"}
                </div>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__qX2Ci
                  )}
                >
                  {"Smooth Skin"}
                </div>
              </div>
            </Stack__>
          </section> */}

          
          {/* 2. before after section */}
          <section
            data-plasmic-name={"beforeAfterSection"}
            data-plasmic-override={overrides.beforeAfterSection}
            className={classNames(projectcss.all, sty.beforeAfterSection)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"beforeAfterHeader"}
              data-plasmic-override={overrides.beforeAfterHeader}
              hasGap={true}
              className={classNames(projectcss.all, sty.beforeAfterHeader)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__vb63O
                )}
              >
                <React.Fragment>
                  <React.Fragment>{"Before & "}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{
                      fontStyle: "italic",
                      fontWeight: 500,
                      color: "#D19D51"
                    }}
                  >
                    {"After"}
                  </span>
                </React.Fragment>
              </h2>
              <p
                className={classNames(
                  projectcss.all,
                  projectcss.p,
                  projectcss.__wab_text,
                  sty.p__zTptG
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "The results of our clients speak for themselves"
                  : "The results of our clients speak for themselves"}
              </p>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__veMx)}>
              <TestimonialsSlider
                data-plasmic-name={"beforeAfterSlider"}
                data-plasmic-override={overrides.beforeAfterSlider}
                className={classNames("__wab_instance", sty.beforeAfterSlider)}
                ctaLink={"#"}
                ctaText={"Act Now"}
                isDarkBg={false}
                settings={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? {
                        dots: false,
                        arrows: false,
                        infinite: true,
                        speed: 500,
                        slidesToShow: 1,
                        slidesToScroll: 1
                      }
                    : hasVariant(globalVariants, "screen", "midsize")
                    ? {
                        dots: false,
                        arrows: false,
                        infinite: true,
                        speed: 500,
                        slidesToShow: 2,
                        slidesToScroll: 1
                      }
                    : {
                        dots: false,
                        arrows: false,
                        infinite: true,
                        speed: 500,
                        slidesToShow: 3,
                        slidesToScroll: 1
                      }
                }
              >
                <TestimonialCard
                  avatar={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__cVxVg)}
                      displayHeight={"44px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"44px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng29.png",
                        fullWidth: 88,
                        fullHeight: 88,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  className={classNames(
                    "__wab_instance",
                    sty.testimonialCard___3XFxL
                  )}
                  insta={"@juliaaa2000"}
                  patient={"Julia Bing"}
                  subtitle={"Results after one month with Botox"}
                  title={"Julia\u2019s Results"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__s7X19)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/contentResultAvif.avif",
                      fullWidth: 486,
                      fullHeight: 480,
                      aspectRatio: undefined
                    }}
                  />
                </TestimonialCard>
                <TestimonialCard
                  avatar={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__zuxSd)}
                      displayHeight={"auto"}
                      displayMaxHeight={"44px"}
                      displayMaxWidth={"44px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng30.png",
                        fullWidth: 88,
                        fullHeight: 88,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  className={classNames(
                    "__wab_instance",
                    sty.testimonialCard___5Kva4
                  )}
                  insta={"@melnyk_dasha"}
                  patient={"Daria Melnyk"}
                  subtitle={"Results after three weeks with Botox"}
                  title={"Daria\u2019s Results"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__hQ2Dl)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/image301ResultAvif.avif",
                      fullWidth: 379,
                      fullHeight: 379,
                      aspectRatio: undefined
                    }}
                  />
                </TestimonialCard>
                <TestimonialCard
                  avatar={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__rwyL0)}
                      displayHeight={"auto"}
                      displayMaxHeight={"44px"}
                      displayMaxWidth={"44px"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"auto"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng31.png",
                        fullWidth: 88,
                        fullHeight: 88,
                        aspectRatio: undefined
                      }}
                    />
                  }
                  className={classNames(
                    "__wab_instance",
                    sty.testimonialCard__sEbS9
                  )}
                  insta={"@annajohnson"}
                  patient={"Anna Johnson"}
                  subtitle={"Results after two weeks with Botox"}
                  title={"Anna\u2019s Results"}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jcskn)}
                    displayHeight={"auto"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/_66Cc8477C61D4Fc872E5B045ImagelabBotoxResult1P800ResultAvif.avif",
                      fullWidth: 800,
                      fullHeight: 800,
                      aspectRatio: undefined
                    }}
                  />
                </TestimonialCard>
              </TestimonialsSlider>
            </div>
          </section>

          {/* 3. affordable hair restoration treatments tailored to you */}
          <Stack__
            as={"section"}
            data-plasmic-name={"affordableBotoxSection"}
            data-plasmic-override={overrides.affordableBotoxSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.affordableBotoxSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___1JzFp)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fLnGd
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Affordable"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Hair Restoration Treatments"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#9a7f71", fontStyle: "italic" }}
                    >
                      {"Tailored to You"}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Affordable Hair Restoration Treatments"}
                    </span>
                    <br></br>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#9a7f71", fontStyle: "italic" }}
                    >
                      {"Tailored to You"}
                    </span>
                  </React.Fragment>
                )}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tfw7
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#535556" }}
                  >
                    {
                      "Affordable, transparent Hair Restoration pricing tailored to your goals and budget."
                    }
                  </span>
                </React.Fragment>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hib93)}
            >
              {/* PRP Hair Restoration */}
              <AffordableBotoxCard
                name={"PRP Hair Restoration"}
                perUnit={"$599"}
                price={"$299"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? [
                        {
                          title: "Stimulate New Hair Growth",
                          description:
                            "Use your own bodyâ€™s plasma to boost hair growth in targeted regions"
                        },
                        {
                          title: "Clinically Backed, Proven Results",
                          description:
                            "The most studied natural hair restoration service â€“ 100% natural, no chemicals or foreign substances"
                        },
                        {
                          title: "Over 7,000 Treatments Performed at CADMEN",
                          description:
                            "We are the only clinic in Ontario with medical-grade PRP Hair Restoration practices "
                        }
                      ]
                    : [
                        {
                          title: "Stimulate New Hair Growth",
                          description:
                            "Use your own bodyâ€™s plasma to boost hair growth in targeted regions"
                        },
                        {
                          title: "Clinically Backed, Proven Results",
                          description:
                            "The most studied natural hair restoration service â€“ 100% natural, no chemicals or foreign substances"
                        },
                        {
                          title: "Over 7,000 Treatments Performed at CADMEN",
                          description:
                            "We are the only clinic in Ontario with medical-grade PRP Hair Restoration practices "
                        }
                      ]
                }
              />

              {/* Exosome Hair Therapy */}
              <AffordableBotoxCard
                name={"Exosome Hair Therapy"}
                perUnit={"$799"}
                price={"$399"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard___844NL
                )}
                items={[
                  {
                    title: "Stop Further Hair Thinning and Shedding",
                    description:
                      "Address the root cause of your hair loss by blocking DHT on your scalp"
                  },
                  {
                    title: "Stimulate Rapid Hair Growth",
                    description:
                      "Activate healing dormant hair follicles to stimulate new hair growth faster"
                  },
                  {
                    title: "Next-Gen Regenerative Science",
                    description:
                      "Our stem cell-derived Exosomes have disrupted the industry due to its unparallelled levels of efficacy"
                  }
                ]}
              />

              {/* Mesotherapy Vitamins */}
              <AffordableBotoxCard
                name={"Mesotherapy Vitamins"}
                perUnit={"$399"}
                price={"$199"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__rVlvw
                )}
                items={[
                  {
                    title: "Strengthen Thinning Hair",
                    description:
                      "Nourish your scalp from the root up to prevent further hair thinning and shedding"
                  },
                  {
                    title: "Improve Scalp Circulation for Hair Growth",
                    description:
                      "Microinjections of complex vitamins boost blood circulation in your scalp while providing nutrients required to stimulate hair growth"
                  },
                  {
                    title: "Clinically Proven Ingredients",
                    description:
                      "Complex blend of amino acids, vitamins, DHT blocker, and other essential nutrients that are dermatologist backed and tested with precision"
                  }
                ]}
              />
            </Stack__>

            <Button
              data-plasmic-name={"affordableBotoxButton"}
              data-plasmic-override={overrides.affordableBotoxButton}
              className={classNames(
                "__wab_instance",
                sty.affordableBotoxButton
              )}
            >
              {"Book Now"}
            </Button>
          </Stack__>

          {/* 4. afforadble prices interactive section (import) */}
          <AffordableHairRestoration/>

          {/* 5. Proven & Affordable Treatment Packages Tailored for All Types of Hair Loss (slider) */}
          <Stack__
            as={"section"}
            data-plasmic-name={"affordableBotoxSection"}
            data-plasmic-override={overrides.affordableBotoxSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.affordableBotoxSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___1JzFp)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__fLnGd
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Proven & Affordable Treatment Packages"}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"Tailored for"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#9a7f71", fontStyle: "italic" }}
                  >
                    {"All Types of Hair Loss"}
                  </span>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__tfw7
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#535556" }}
                  >
                    {"Discounted packages tailored for your goals and budget. Schedule a free consultation to figure out which package is for you."}
                  </span>
                </React.Fragment>
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__hib93)}
            >
            
            <WhyOurPatientsSlider
              settings={{
                dots: false,
                infinite: false,
                arrows: false,
                speed: 500,
                slidesToShow: windowWidth > 768 ? 3.1 : 1.1,
                slidesToScroll: windowWidth > 768 ? 3 : 1
              }}
              handleButtonClick={() => router.push('/book-now')}
            >
              {/* 1. 4 PRP Hair Restoration Sessions */}
              <AffordableBotoxCard
                name={"4 PRP Hair Restoration Sessions"}
                perUnit={"$2,399"}
                unitWording={"/ New Patient Special"}
                price={"$1,999"}
                pillUnit={"/ Regular price"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  [
                    {
                      title: "10-Week Program to Re-Grow Your Hair",
                      description:
                        "Treatments scheduled every 3 weeks to ensure optimal results"
                    },
                    {
                      title: "Ideal for patients seeking to stimulate natural hair growth to combat ongoing hair shedding and thinning",
                    }
                  ]
                }
              />
              {/* 2. 3 Exosome Hair Therapy Sessions */}
              <AffordableBotoxCard
                name={"3 Exosome Hair Therapy Sessions"}
                perUnit={"$2,399"}
                unitWording={"/ New Patient Special"}
                price={"$1,799"}
                pillUnit={"/ Regular price"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  [
                    {
                      title: "6-Week Program to Prevent Hair Loss",
                      description:
                        "Treatments scheduled every 3 weeks to ensure optimal results"
                    },
                    {
                      title: "Ideal for patients seeking to prevent the root cause of hair loss and stimulate hair growth by blocking DHT levels",
                    }
                  ]
                }
              />
              {/* 3. 6 Mesotherapy Vitamin Sessions */}
              <AffordableBotoxCard
                name={"6 Mesotherapy Vitamin Sessions"}
                perUnit={"$2,399"}
                unitWording={"/ New Patient Special"}
                price={"$1,999"}
                pillUnit={"/ Regular price"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  [
                    {
                      title: "6-Week Program to Nourish Your Scalp and Prevent Hair Loss",
                      description:
                        "Treatments scheduled every 1 week to ensure optimal results"
                    },
                    {
                      title: "Ideal for patients seeking a healthier and nourished scalp while combatting ongoing hair loss.",
                    }
                  ]
                }
              />
              {/* 4. 3 PRP Hair Restoration + 6 Mesotherapy Vitamin Sessions */}
              <AffordableBotoxCard
                name={"3 PRP Hair Restoration + 6 Mesotherapy Vitamin Sessions"}
                perUnit={"$4,199"}
                unitWording={"/ New Patient Special"}
                price={"$3,299"}
                pillUnit={"/ Regular price"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  [
                    {
                      title: "9-Week Program to Re-Grow Your Hair and Nourish Your Scalp",
                      description:
                        "Treatments scheduled every 1 week to ensure optimal results"
                    },
                    {
                      title: "Ideal for patients seeking optimal results for new hair growth, a nourished scalp throughout your PRP process increases longevity of your results",
                    }
                  ]
                
                }
              />
              {/* 5. 3 PRP Hair Restoration + 3 Exosome Hair Therapy Sessions */}
              <AffordableBotoxCard
                name={"3 PRP Hair Restoration + 3 Exosome Hair Therapy Sessions"}
                perUnit={"$4,199"}
                unitWording={"/ New Patient Special"}
                price={"$2,999"}
                pillUnit={"/ Regular price"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  [
                    {
                      title: "7-Week Program to Re-Grow Your Hair and Prevent Further Hair Loss",
                      description:
                        "Treatments scheduled every 3 weeks to ensure optimal results"
                    },
                    {
                      title: "Our most popular package for anyone seeking the full solution â€“ re-grow your hair while blocking DHT to prevent further hair loss",
                    }
                  ]
                
                }
              />
              {/* 6. 3 Exosome Hair Therapy + 6 Mesotherapy Vitamin Sessions */}
              <AffordableBotoxCard
                name={"3 Exosome Hair Therapy + 6 Mesotherapy Vitamin Sessions"}
                perUnit={"$4,199"}
                unitWording={"/ New Patient Special"}
                price={"$3,499"}
                pillUnit={"/ Regular price"}
                className={classNames(
                  "__wab_instance",
                  sty.affordableBotoxCard__v1OXt
                )}
                items={
                  [
                    {
                      title: "9-Week Program to Re-Grow Your Hair, Prevent Further Hair Loss, and Nourish Your Scalp",
                      description:
                        "Treatments scheduled every 1 week to ensure optimal results"
                    },
                    {
                      title: "Curated for patients ineligible for PRP Hair Restoration, pair Exosome Hair Therapy with Mesotherapy Vitamins to unlock powerful results",
                    }
                  ]
                
                }
              />
            </WhyOurPatientsSlider>

            </Stack__>
          </Stack__>

          {/* 6. our hair restoration program */}
          <Stack__
            as={"div"}
            data-plasmic-name={"ourBotoxProcessSection"}
            data-plasmic-override={overrides.ourBotoxProcessSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.ourBotoxProcessSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___2OIGn)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ubNkL
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"Our Hair Restoration "}
                  </span>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#E4C08C", fontStyle: "italic" }}
                  >
                    {"Program"}
                  </span>
                </React.Fragment>
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___63Mxp
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "From consultation to treatment,\nwe make the process simpleand comfortable for natural, lasting results."
                  : "From consultation to treatment, we make the process\n simpleand comfortable for natural, lasting results."}
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__sfxyV)}>
              <div
                data-plasmic-name={"ourBotoxProcessCircle"}
                data-plasmic-override={overrides.ourBotoxProcessCircle}
                className={classNames(
                  projectcss.all,
                  sty.ourBotoxProcessCircle
                )}
              />

              <div
                data-plasmic-name={"ourBotoxProcessCircleBg"}
                data-plasmic-override={overrides.ourBotoxProcessCircleBg}
                className={classNames(
                  projectcss.all,
                  sty.ourBotoxProcessCircleBg
                )}
              >
                <div
                  data-plasmic-name={"ourBotoxProcessEllipse1"}
                  data-plasmic-override={overrides.ourBotoxProcessEllipse1}
                  className={classNames(
                    projectcss.all,
                    sty.ourBotoxProcessEllipse1
                  )}
                />

                <div
                  data-plasmic-name={"ourBotoxProcessEllipse2"}
                  data-plasmic-override={overrides.ourBotoxProcessEllipse2}
                  className={classNames(
                    projectcss.all,
                    sty.ourBotoxProcessEllipse2
                  )}
                />

                <div
                  data-plasmic-name={"ourBotoxProcessEllipse3"}
                  data-plasmic-override={overrides.ourBotoxProcessEllipse3}
                  className={classNames(
                    projectcss.all,
                    sty.ourBotoxProcessEllipse3
                  )}
                />
              </div>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__f83H1)}
              >
                {/* <div
                  data-plasmic-name={"ourBotoxProcessIcons"}
                  data-plasmic-override={overrides.ourBotoxProcessIcons}
                  className={classNames(
                    projectcss.all,
                    sty.ourBotoxProcessIcons
                  )}
                >
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___1Lawf)}
                    displayHeight={"16px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"16px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/documentSvg.svg",
                      fullWidth: 17,
                      fullHeight: 17,
                      aspectRatio: 1
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___2Mp5)}
                    displayHeight={"16px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"16px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/injectionSvg3.svg",
                      fullWidth: 17,
                      fullHeight: 17,
                      aspectRatio: 1
                    }}
                  />

                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jhzDk)}
                    displayHeight={"16px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"16px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/checkSvg4.svg",
                      fullWidth: 17,
                      fullHeight: 17,
                      aspectRatio: 1
                    }}
                  />
                </div> */}
                <div className={classNames(projectcss.all, sty.freeBox__wjfNi)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__or5Lo
                    )}
                  >
                    {"Step "}
                  </div>
                  <div
                    data-plasmic-name={"ourBotoxProcessNumber"}
                    data-plasmic-override={overrides.ourBotoxProcessNumber}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.ourBotoxProcessNumber
                    )}
                  >
                    {"1"}
                  </div>
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                data-plasmic-name={"ourBotoxProcessContent"}
                data-plasmic-override={overrides.ourBotoxProcessContent}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.ourBotoxProcessContent
                )}
              >
                {/* CONSULTATION */}
                <BotoxProcessCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxProcessCard___1RJzs
                  )}
                  description={
                    "Begin with a personalized consultation where our experts assess your hair and discuss your goals. We\u2019ll create a tailored treatment plan to ensure optimal results that align with your needs."
                  }
                  icon={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__r7ScN)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "48px"
                          : "100%"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "48px"
                          : "100%"
                      }
                      loading={"lazy"}
                      src={{
                        src: "/icons/document-icon.svg",
                        fullWidth: 73,
                        fullHeight: 72,
                        aspectRatio: 1.013889
                      }}
                    />
                  }
                  title={"\u00a0Consultation"}
                />

                {/* Treatment */}
                <BotoxProcessCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxProcessCard__yVyJm
                  )}
                  description={
                    "During your hair restoration session, a skilled practitioner will administer precise injections and/or microneedling to targeted areas. The procedure is quick, minimally invasive, and designed for your comfort."
                  }
                  icon={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__kFeTq)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/icons/syringe-icon copy.svg",
                        fullWidth: 73,
                        fullHeight: 72,
                        aspectRatio: 1.013889
                      }}
                    />
                  }
                  title={"Treatment"}
                />

                {/* Results */}
                <BotoxProcessCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxProcessCard__kRbN
                  )}
                  description={
                    "Enjoy smoother, younger-looking skin as the Botox begins to work over the next few days. With minimal downtime, you\u2019ll look refreshed and confident in no time."
                  }
                  icon={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__p6Fxk)}
                      displayHeight={"100%"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/icons/verified-icon.svg",
                        fullWidth: 73,
                        fullHeight: 72,
                        aspectRatio: 1.013889
                      }}
                    />
                  }
                  title={"Results"}
                />
              </Stack__>
              <Button
                data-plasmic-name={"ourBotoxProcessButton"}
                data-plasmic-override={overrides.ourBotoxProcessButton}
                className={classNames(
                  "__wab_instance",
                  sty.ourBotoxProcessButton
                )}
                color={"white"}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__hxUfC
                  )}
                >
                  {"Book Now"}
                </div>
              </Button>
            </div>
          </Stack__>

          {/* 7. Preparing for your hair restoration appointment */}
          <Stack__
            as={"section"}
            data-plasmic-name={"botoxAppointmentSection"}
            data-plasmic-override={overrides.botoxAppointmentSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.botoxAppointmentSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___14QN)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__hhfus)}
              >
                <div
                  className={classNames(projectcss.all, sty.freeBox___4V7A8)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__zXpNv
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "midsize") ? (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#080909" }}
                        >
                          {"Preparing for Your"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#D19D51" }}
                        >
                          {"Hair Restoration Appointment"}
                        </span>
                      </React.Fragment>
                    ) : (
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#080909" }}
                        >
                          {"Preparing for Your"}
                        </span>
                        <React.Fragment> </React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#D19D51" }}
                        >
                          {"Hair Restoration Appointment"}
                        </span>
                      </React.Fragment>
                    )}
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__k235L
                    )}
                  >
                    {"Here are some tips to ensure a smooth experience:"}
                  </div>
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___87Pse)}
                >
                  {/* stay adequately hydrated */}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__eqIOp)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"title"}
                      data-plasmic-override={overrides.title}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.title)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg__tNu1F)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__a1TXf
                        )}
                      >
                        {"Stay Adequately Hydrated"}
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6Xz0B
                      )}
                    >
                      {"During the day of your appointment, stay hydrated to ensure optimal results. For PRP Hair Restoration, we advise patients to be sufficiently hydrated to ensure an ample amount of blood can be drawn."}
                    </div>
                  </div>

                  {/* skip alcohol and tobacco */}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__p9P7X)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"title2"}
                      data-plasmic-override={overrides.title2}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.title2)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg___6AfnD)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__gvoCy
                        )}
                      >
                        {"Skip Alcohol and Tobacco"}
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___24Kjb
                      )}
                    >
                      {
                        "Both can increase bruising and affect your skin\u2019s recovery. Try to avoid alcohol for at least 24 hours before and after treatment."
                      }
                    </div>
                  </div>

                  {/* inform your provider of medical history */}
                  <div
                    className={classNames(projectcss.all, sty.freeBox__qJgGy)}
                  >
                    <Stack__
                      as={"div"}
                      data-plasmic-name={"title3"}
                      data-plasmic-override={overrides.title3}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.title3)}
                    >
                      <PointIcon
                        className={classNames(projectcss.all, sty.svg__xjPsH)}
                        role={"img"}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___4O0
                        )}
                      >
                        {"Inform Your Provider of Medical History"}
                      </div>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__n0Hkk
                      )}
                    >
                      {
                        "Be transparent about any medical conditions, allergies, or medications you\u2019re taking. This information helps us customize your treatment and prevent potential complications."
                      }
                    </div>
                  </div>
                </Stack__>
              </Stack__>

              <Button
                data-plasmic-name={"botoxAppointmentButton"}
                data-plasmic-override={overrides.botoxAppointmentButton}
                className={classNames(
                  "__wab_instance",
                  sty.botoxAppointmentButton
                )}
              >
                {"Book Now"}
              </Button>
            </div>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ch388)}
            >
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__m5RlW)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "200px"
                    : hasVariant(globalVariants, "screen", "midsize")
                    ? "100%"
                    : "auto"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "100%"
                    : "auto"
                }
                loading={"lazy"}
                src={{
                  src: "/media/services/ivy-1.jpg",
                  fullWidth: 1300,
                  fullHeight: 1115,
                  aspectRatio: undefined
                }}
              />

              <Button
                data-plasmic-name={"botoxAppointmentMobileButton"}
                data-plasmic-override={overrides.botoxAppointmentMobileButton}
                className={classNames(
                  "__wab_instance",
                  sty.botoxAppointmentMobileButton
                )}
              >
                {"Book Now"}
              </Button>
            </Stack__>
          </Stack__>

          {/* 8. What to expect during and after the treatment */}
          <Stack__
            as={"section"}
            data-plasmic-name={"afterTheTreatmentSection"}
            data-plasmic-override={overrides.afterTheTreatmentSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.afterTheTreatmentSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__avtMx)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__pM6Cj)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "midsize")
                    ? "100%"
                    : "auto"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/media/services/ivy-1.jpg",
                  fullWidth: 1300,
                  fullHeight: 1423,
                  aspectRatio: undefined
                }}
              />
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__fBcEx)}>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__jyaYg)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xXnt1)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__io7Fa
                    )}
                  >
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"What to Expect"}
                      </span>
                      <React.Fragment> </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#D19D51" }}
                      >
                        {"During and After "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"the Treatment"}
                      </span>
                    </React.Fragment>
                  </div>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__wQcHr
                    )}
                  >
                    {"Our hair restoration treatments are minimally invasive and quick, typically taking 30 minutes. Most patients describe the feeling as a slight pinch on your scalp."}
                  </div>
                </Stack__>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__xk3C)}
                >
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___9EBfz
                    )}
                  >
                    {"Post-Treatment Care:"}
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__pqLf)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg___4KuWw)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___0Op2E
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#535556" }}
                        >
                          {"Avoid showering and applying any hair products for at least 24 hours post-treatment to ensure full efficacy."}
                        </span>
                      </React.Fragment>
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__j0AL)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg___5Xh4E)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gyFvG
                      )}
                    >
                      {"Stay hydrated throughout the day to support healing â€“ this is recommended especially after PRP and Exosome treatments."}
                    </div>
                  </Stack__>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__n3Sx)}
                  >
                    <PointIcon
                      className={classNames(projectcss.all, sty.svg__dvNar)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__zuWu4
                      )}
                    >
                      {"Protect your scalp from direct sun exposure for atleast 24 hours."}
                    </div>
                  </Stack__>
                </Stack__>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__bx3Iz
                  )}
                >
                  {"Results typically begin to appear within 2-3 sessions, however it is critical to follow our post-treatment care to ensure you are getting optimal results."}
                </div>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__hKjVf)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/imagePng11.png",
                  fullWidth: 686,
                  fullHeight: 400,
                  aspectRatio: undefined
                }}
              />

              <Button
                data-plasmic-name={"afterTheTreatmentButton"}
                data-plasmic-override={overrides.afterTheTreatmentButton}
                className={classNames(
                  "__wab_instance",
                  sty.afterTheTreatmentButton
                )}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__r1Gsl
                  )}
                >
                  {"Book Now"}
                </div>
              </Button>
            </div>
          </Stack__>

          {/* 9. alternating image section */}
          <section
            data-plasmic-name={"chooseBotoxSection"}
            data-plasmic-override={overrides.chooseBotoxSection}
            className={classNames(projectcss.all, sty.chooseBotoxSection)}
          >
            <div
              style={{
                width: '95%',
                // maxWidth: '1100px',
                margin: '0 auto',
                padding: '2rem 0',
              }}
            >
              {section8cards.map(card => (
                <AlternatingInfoCard key={card.id} card={card} />
              ))}
            </div>
          </section>

          {/* 10. faq, question and answer */}
          <section
            data-plasmic-name={"faqSection"}
            data-plasmic-override={overrides.faqSection}
            className={classNames(projectcss.all, sty.faqSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__bvh1R)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___2KoD9
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Curious?"}
                    </span>
                    <React.Fragment>{" \n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#D19D51" }}
                    >
                      {"We have answers."}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Curious?"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#D19D51" }}
                    >
                      {"We have answers."}
                    </span>
                  </React.Fragment>
                )}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___74Pg
                )}
              >
                {
                  "Contact us to schedule a FREE consultation."
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mrdPy)}
            >

              <Faq
                answer={
                  "Our commitment to personalized care, safety, and client satisfaction sets us apart. We focus on natural, long-lasting results and offer transparent pricing and rewards for loyal clients."
                }
                className={classNames("__wab_instance", sty.faq__g1EoJ)}
                question={
                  "What makes CADMEN Clinic different from other providers?"
                }
              />

              <Faq
                answer={
                  "During your consultation, our team will assess your scalp and hair concerns to craft a tailored package for you."
                }
                className={classNames("__wab_instance", sty.faq__qxO4I)}
                question={"How do I know which treatment is right for me?"}
              />

              <Faq
                answer={
                  "Yes! All clients can schedule a free follow-up appointment to check-in on their progress and address any concerns."
                }
                className={classNames("__wab_instance", sty.faq__ab5Id)}
                question={"Do you offer follow-up appointments?"}
              />

              <Faq
                answer={
                  "Within 2-4 sessions you will see improvement in your hair! Depending on the treatment, the timing varies but we recommend combining treatments (i.e., PRP + Exosomes) for optimal results."
                }
                className={classNames("__wab_instance", sty.faq__ab5Id)}
                question={"When will I see progress?"}
              />

              <Faq
                answer={
                  "Yes! New customers receive 50% off their first treatment and exclusive package pricing. "
                }
                className={classNames("__wab_instance", sty.faq__ab5Id)}
                question={"Do you have any promotions for new customers?"}
              />
              

            </Stack__>
          </section>

          {/* 11. want to learn more if our hair restoration treatments are right for you */}
          <Stack__
            as={"section"}
            data-plasmic-name={"ctaSection"}
            data-plasmic-override={overrides.ctaSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.ctaSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__dlFxX)}
            >
              <div
                data-plasmic-name={"heading9"}
                data-plasmic-override={overrides.heading9}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading9
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {"Want to learn more if our "}
                  </span>
                  <React.Fragment>{"\n"}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#E4C08C" }}
                  >
                    {"Hair Restoration Treatments are right"}
                  </span>
                  <React.Fragment>{""}</React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#FFFFFF" }}
                  >
                    {" for you?"}
                  </span>
                </React.Fragment>
                {/* {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {"Want to know how long your "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#E4C08C" }}
                    >
                      {"Botox results"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {"might last?"}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {"Want to learn more about if "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#E4C08C" }}
                    >
                      {"Botox is right"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {" for you?"}
                    </span>
                  </React.Fragment>
                )} */}
              </div>
              <div
                data-plasmic-name={"supportingText8"}
                data-plasmic-override={overrides.supportingText8}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.supportingText8
                )}
              >
                {"Schedule a free Consultation with our team to discuss a treatment plan tailored for you"}
              </div>
            </Stack__>
            <Button
              data-plasmic-name={"ctaButton"}
              data-plasmic-override={overrides.ctaButton}
              className={classNames("__wab_instance", sty.ctaButton)}
              color={"white"}
            >
              {"Book Now"}
            </Button>
          </Stack__>

          {/* 12. our location */}
          <OurLocationSection
            data-plasmic-name={"ourLocationSection"}
            data-plasmic-override={overrides.ourLocationSection}
            className={classNames("__wab_instance", sty.ourLocationSection)}
          />

          {/* ---------EXTRA STUFF TO BE REMOVED---------- */}

          {/* who should avoid botox */}
          {/* <section
            data-plasmic-name={"avoidBotoxSection"}
            data-plasmic-override={overrides.avoidBotoxSection}
            className={classNames(projectcss.all, sty.avoidBotoxSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__p3Jb1)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__ewjOv
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#302E33" }}
                    >
                      {"Who Should"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#D19D51" }}
                    >
                      {"Avoid Botox?"}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#302E33" }}
                    >
                      {"Who Should"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#D19D51" }}
                    >
                      {"Avoid Botox?"}
                    </span>
                  </React.Fragment>
                )}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__sposb
                )}
              >
                {
                  "While Botox is suitable for most clients, certain individuals should avoid it or consult with a healthcare provider before treatment:"
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.freeBox__aUbOb,
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "hide-scrollbar"
                  : undefined
              )}
            >
              <div className={classNames(projectcss.all, sty.freeBox__mN06)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___6KNo4
                  )}
                >
                  {"Pregnant or Breastfeeding Women"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__kxEGy)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng12.png",
                    fullWidth: 855,
                    fullHeight: 573,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fHwEd
                  )}
                >
                  {
                    "Botox is not recommended during pregnancy or breastfeeding due to the lack of studies on its effects during these periods."
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__yEcoy)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__zq2Bs
                  )}
                >
                  {"People with Certain Medical Conditions"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___7JzLl)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng13.png",
                    fullWidth: 855,
                    fullHeight: 573,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__wmpVf
                  )}
                >
                  {
                    "Individuals with neurological disorders, muscle weakness, or a history of allergic reactions to Botox or similar products should avoid Botox unless advised otherwise by a medical professional."
                  }
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.freeBox__knVfo)}>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vfqR
                  )}
                >
                  {"Those Taking Certain Medications"}
                </div>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__yZ0DH)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/image_lab_2024/images/imagePng14.png",
                    fullWidth: 855,
                    fullHeight: 573,
                    aspectRatio: undefined
                  }}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__f9Owt
                  )}
                >
                  {
                    "Some medications, particularly blood thinners, can increase the risk of bruising and should be discussed with your provider beforehand."
                  }
                </div>
              </div>
            </Stack__>
          </section> */}

          {/* safety measures */}
          {/* <section
            data-plasmic-name={"safetyMeasuresSection"}
            data-plasmic-override={overrides.safetyMeasuresSection}
            className={classNames(projectcss.all, sty.safetyMeasuresSection)}
          >
            <div
              data-plasmic-name={"safetyMeasuresHeader"}
              data-plasmic-override={overrides.safetyMeasuresHeader}
              className={classNames(projectcss.all, sty.safetyMeasuresHeader)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__qlaBw
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Safety Measures"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#D19D51", fontStyle: "italic" }}
                    >
                      {" at ImageLab Medspa"}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Safety Measures"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#D19D51", fontStyle: "italic" }}
                    >
                      {"at ImageLab Medspa"}
                    </span>
                  </React.Fragment>
                )}
              </div>
            </div>
            <Stack__
              as={"div"}
              data-plasmic-name={"safetyMeasuresContent"}
              data-plasmic-override={overrides.safetyMeasuresContent}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.safetyMeasuresContent,
                "hide-scrollbar"
              )}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__fyJ5N)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__q9Jak
                  )}
                >
                  {"01"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox___1Di5Y)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__uQf1L)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___6IFdx)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "256px"
                          : "264px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng36.png",
                        fullWidth: 864,
                        fullHeight: 681,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__vOzAm)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___95MjE
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Experienced and Licensed Injectors"
                        : "Experienced and Licensed Injectors"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__hs5Nh
                      )}
                    >
                      {
                        "Our injectors are highly trained and licensed, with a thorough understanding of facial anatomy and advanced Botox techniques. This expertise helps minimize the risk of complications and ensures beautiful, natural-looking results."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__vuygs)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___3NrIa
                  )}
                >
                  {"02"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__vd3H3)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__sYrv)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__bK8Mg)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "256px"
                          : "264px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng37.png",
                        fullWidth: 864,
                        fullHeight: 681,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iD00C)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fZVdr
                      )}
                    >
                      {"Rigorous Screening Process"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___7Mx8
                      )}
                    >
                      {
                        "Before treatment, we conduct a detailed consultation to assess your medical history, skincare goals, and any risk factors. We only proceed if Botox is deemed safe and suitable for you."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wXcqs)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__kMsyx
                  )}
                >
                  {"03"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cHc6C)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__w9K5)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__cbRKc)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "256px"
                          : "264px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng38.png",
                        fullWidth: 864,
                        fullHeight: 680,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox___0CFed)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gSbKo
                      )}
                    >
                      {"Use of Authentic,\nFDA-Approved Botox"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__t4Nyn
                      )}
                    >
                      {
                        "We use only FDA-approved Botox, sourced directly from the manufacturer to ensure its quality and safety. Authentic Botox has a proven safety record, giving you peace of mind that you\u2019re receiving the best possible product."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__wPnqA)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__urzLt
                  )}
                >
                  {"04"}
                </div>
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__ep1CJ)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__occnp)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__lq9NI)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "256px"
                          : "264px"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"100%"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/imagePng39.png",
                        fullWidth: 864,
                        fullHeight: 680,
                        aspectRatio: undefined
                      }}
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__iu70J)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__gigMi
                      )}
                    >
                      {"Sanitary Environment \nand Sterile Techniques"}
                    </div>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___6BXV
                      )}
                    >
                      {
                        "Our medspa adheres to high standards of cleanliness and sterilization, minimizing any risk of infection. We use sterile needles and equipment for each client to maintain a safe environment."
                      }
                    </div>
                  </Stack__>
                </Stack__>
              </Stack__>
            </Stack__>
          </section> */}

          {/* myths about botox */}
          {/* <section
            data-plasmic-name={"botoxMythsSection"}
            data-plasmic-override={overrides.botoxMythsSection}
            className={classNames(projectcss.all, sty.botoxMythsSection)}
          >
            <div
              className={classNames(
                projectcss.all,
                projectcss.__wab_text,
                sty.text__erLlu
              )}
            >
              {hasVariant(globalVariants, "screen", "mobileOnly")
                ? "Botox Myths\n Explained"
                : "Botox Myths Explained"}
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__lGgW)}>
              <BotoxMythsSlider
                data-plasmic-name={"botoxMythsSlider"}
                data-plasmic-override={overrides.botoxMythsSlider}
                className={classNames("__wab_instance", sty.botoxMythsSlider)}
                isDarkBg={false}
                settings={
                  hasVariant(globalVariants, "screen", "midsize")
                    ? {
                        dots: false,
                        infinite: false,
                        speed: 500,
                        slidesToShow: 1,
                        slidesToScroll: 1
                      }
                    : {
                        dots: false,
                        infinite: false,
                        speed: 500,
                        slidesToShow: 2,
                        slidesToScroll: 2
                      }
                }
              >
                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__ohDxg
                  )}
                  description={
                    "One of the biggest concerns about Botox is that it will lead to an unnatural or \u201cfrozen\u201d appearance. In reality, Botox is designed to relax specific muscles that cause wrinkles, not to paralyze your entire face. A well-trained provider can use precise injection techniques to soften lines without compromising your natural facial expressions."
                  }
                  fact={
                    "<strong>Fact:</strong> Botox only affects the muscles at the injection site, and when administered by a skilled injector, it\u2019s highly unlikely to \u201cfreeze\u201d your face."
                  }
                  number={1}
                  title={"Botox Will Make My Face Look Frozen"}
                />

                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__eNvt
                  )}
                  description={
                    "Botox has been extensively studied and used safely in both medical and cosmetic fields for over 30 years. The FDA approved Botox for aesthetic use in 2002, and since then, it has been widely recognized as a safe and effective treatment for wrinkles. While any procedure has potential risks, Botox side effects are usually minor, such as temporary bruising or swelling."
                  }
                  fact={
                    "<strong>Fact:</strong> Botox is FDA-approved and safe when administered by a licensed, qualified provider."
                  }
                  number={2}
                  title={"Botox is Dangerous"}
                />

                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__sZiFj
                  )}
                  description={
                    "The idea that Botox is only for people with visible wrinkles is outdated. Many people in their 20s and 30s are choosing Botox as a preventative measure to reduce the formation of fine lines before they become more pronounced. By targeting dynamic wrinkles early on, preventative Botox can help maintain a smooth complexion over time."
                  }
                  fact={
                    "<strong>Fact:</strong> Botox is commonly used as a preventative measure for younger individuals in their 20s and 30s."
                  }
                  number={3}
                  title={"Botox is Only for Older People"}
                />

                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__nWj2X
                  )}
                  description={
                    "While some clients enjoy the aesthetic results so much that they choose to maintain them long-term, Botox is not chemically addictive. Unlike substances that lead to physical dependency, Botox wears off naturally within 3-4 months, and choosing to continue treatment is entirely optional."
                  }
                  fact={
                    "<strong>Fact:</strong> Botox does not cause physical addiction."
                  }
                  number={4}
                  title={"Botox is Addictive"}
                />

                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__qJfgi
                  )}
                  description={
                    "While Botox is best known for smoothing wrinkles, it also has numerous therapeutic applications. Doctors often use Botox to treat medical conditions such as chronic migraines, excessive sweating (hyperhidrosis), jaw clenching (TMJ), and even muscle spasms. Each application has been studied extensively and is performed with precise techniques tailored to the specific condition."
                  }
                  fact={
                    "<strong>Fact:</strong> Botox is used for a variety of medical conditions, including chronic migraines, TMJ, and excessive sweating."
                  }
                  number={5}
                  title={"Botox is Only for Wrinkles"}
                />

                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__uQ1Po
                  )}
                  description={
                    "A common misconception is that Botox offers immediate results. While you may start seeing some softening of lines within a few days, full effects are generally visible within 7-14 days post-treatment. This is because Botox gradually blocks the neurotransmitters to the targeted muscles, which relaxes them over time."
                  }
                  fact={
                    "<strong>Fact:</strong> Botox takes time to show its full effects, typically between 3-7 days after treatment."
                  }
                  number={6}
                  title={"Botox Will Work Instantly"}
                />

                <BotoxMythsCard
                  className={classNames(
                    "__wab_instance",
                    sty.botoxMythsCard__h2Mua
                  )}
                  description={
                    "Some people worry that Botox may cause permanent changes to their appearance. In reality, Botox is a temporary treatment that wears off over time, allowing treated muscles to return to their natural state. This temporary nature makes Botox an ideal option for clients who want to see if they like the results before committing to regular treatments."
                  }
                  fact={
                    "Fact: Botox is temporary, with effects lasting        approximately 3-4 months."
                  }
                  number={7}
                  title={"Botox is Permanent"}
                />
              </BotoxMythsSlider>
            </div>
          </section> */}

          {/* post treatment guide */}
          {/* <section
            data-plasmic-name={"postTreatmentGuideSection"}
            data-plasmic-override={overrides.postTreatmentGuideSection}
            className={classNames(
              projectcss.all,
              sty.postTreatmentGuideSection
            )}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__b7KjL)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"postTreatmentGuideHeader"}
                data-plasmic-override={overrides.postTreatmentGuideHeader}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.postTreatmentGuideHeader
                )}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__mxJWb
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FFFFFF" }}
                    >
                      {"Post-Treatment Guidelines \nto"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#FAD8A7" }}
                    >
                      {" "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#E4C08C", fontStyle: "italic" }}
                    >
                      {"Maximize Safety"}
                    </span>
                  </React.Fragment>
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__jMXf
                  )}
                >
                  {
                    "Following aftercare instructions is essential for ensuring safe\nand long-lasting results. Here are some recommendations:"
                  }
                </p>
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? false
                  : true
              ) ? (
                <Stack__
                  as={"div"}
                  data-plasmic-name={"postTreatmentGuideCards"}
                  data-plasmic-override={overrides.postTreatmentGuideCards}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.postTreatmentGuideCards,
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "how-botox-works-cards"
                      : undefined
                  )}
                >
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__dHkXm
                    )}
                    icon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img___6RcE)}
                        displayHeight={"20px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"20px"}
                        loading={"lazy"}
                        src={
                          hasVariant(globalVariants, "screen", "midsize")
                            ? {
                                src: "/plasmic/image_lab_2024/images/iconSvg17.svg",
                                fullWidth: 33,
                                fullHeight: 32,
                                aspectRatio: 1.03125
                              }
                            : {
                                src: "/plasmic/image_lab_2024/images/image11.svg",
                                fullWidth: 32,
                                fullHeight: 32,
                                aspectRatio: 1
                              }
                        }
                      />
                    }
                    image={null}
                    small={true}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__oDc78
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 500 }}
                          >
                            {"Stay Upright for "}
                          </span>
                          <React.Fragment>{""}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"4 Hours"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__hs3NV
                      )}
                    >
                      {
                        "Avoid lying down or bending over for at least four hours after your Botox treatment. This helps prevent the product from migrating to unintended areas."
                      }
                    </p>
                  </HowItWorksCard>
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard__yRhtx
                    )}
                    icon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__w4WcC)}
                        displayHeight={"32px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"32px"}
                        loading={"lazy"}
                        src={{
                          src: "/plasmic/image_lab_2024/images/iconSvg3.svg",
                          fullWidth: 33,
                          fullHeight: 32,
                          aspectRatio: 1.03125
                        }}
                      />
                    }
                    image={null}
                    small={true}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__kMqoP
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>{"Avoid Touching "}</React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"or Rubbing the Treated Area"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__ntrkv
                      )}
                    >
                      {
                        "Botox treatments are fast, taking as little as 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                      }
                    </p>
                  </HowItWorksCard>
                  <HowItWorksCard
                    className={classNames(
                      "__wab_instance",
                      sty.howItWorksCard___7Rgc8
                    )}
                    icon={
                      <PlasmicImg__
                        alt={""}
                        className={classNames(sty.img__soCm8)}
                        displayHeight={"32px"}
                        displayMaxHeight={"none"}
                        displayMaxWidth={"100%"}
                        displayMinHeight={"0"}
                        displayMinWidth={"0"}
                        displayWidth={"32px"}
                        loading={"lazy"}
                        src={
                          hasVariant(globalVariants, "screen", "midsize")
                            ? {
                                src: "/plasmic/image_lab_2024/images/iconSvg16.svg",
                                fullWidth: 33,
                                fullHeight: 32,
                                aspectRatio: 1.03125
                              }
                            : {
                                src: "/plasmic/image_lab_2024/images/iconSvg4.svg",
                                fullWidth: 41,
                                fullHeight: 41,
                                aspectRatio: 1
                              }
                        }
                      />
                    }
                    image={null}
                    small={true}
                    title={
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__zuZ50
                        )}
                      >
                        <React.Fragment>
                          <React.Fragment>
                            {"Skip Exercise for "}
                          </React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"24 Hours"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  >
                    <p
                      className={classNames(
                        projectcss.all,
                        projectcss.p,
                        projectcss.__wab_text,
                        sty.p__ggIog
                      )}
                    >
                      {
                        "Vigorous activity may increase blood flow, causing Botox to break down faster. Take it easy for the first day to ensure optimal results."
                      }
                    </p>
                  </HowItWorksCard>
                </Stack__>
              ) : null}
              <Stack__
                as={"div"}
                data-plasmic-name={"postTreatmentGuideCardsMobile"}
                data-plasmic-override={overrides.postTreatmentGuideCardsMobile}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.postTreatmentGuideCardsMobile,
                  "how-botox-works-cards"
                )}
              >
                <HowItWorksCard
                  className={classNames(
                    "__wab_instance",
                    sty.howItWorksCard___7HuE0
                  )}
                  image={null}
                  small={true}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__fJJyB
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 500 }}
                        >
                          {"Stay Upright for "}
                        </span>
                        <React.Fragment>{""}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ color: "#000000" }}
                        >
                          {"4 Hours"}
                        </span>
                      </React.Fragment>
                    </div>
                  }
                >
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__vafAm
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Avoid lying down or bending over for \nat least four hours after your Botox treatment. This helps prevent the product from migrating to unintended areas."
                      : "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."}
                  </p>
                </HowItWorksCard>
                <HowItWorksCard
                  className={classNames(
                    "__wab_instance",
                    sty.howItWorksCard___3P6JA
                  )}
                  icon={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___4B7R4)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/iconSvg5.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  }
                  image={null}
                  small={true}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__vKwGq
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Avoid Touching or "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Rubbing \nthe Treated Area"}
                        </span>
                      </React.Fragment>
                    </div>
                  }
                >
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__wquHd
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Botox treatments are fast, taking as little \nas 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                      : "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."}
                  </p>
                </HowItWorksCard>
                <HowItWorksCard
                  className={classNames(
                    "__wab_instance",
                    sty.howItWorksCard__di3Z5
                  )}
                  icon={
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img__wmczz)}
                      displayHeight={"32px"}
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={"32px"}
                      loading={"lazy"}
                      src={{
                        src: "/plasmic/image_lab_2024/images/iconSvg6.svg",
                        fullWidth: 32,
                        fullHeight: 32,
                        aspectRatio: 1
                      }}
                    />
                  }
                  image={null}
                  small={true}
                  title={
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__we37
                      )}
                    >
                      <React.Fragment>
                        <React.Fragment>{"Skip Exercise for "}</React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"24 Hours"}
                        </span>
                      </React.Fragment>
                    </div>
                  }
                >
                  <p
                    className={classNames(
                      projectcss.all,
                      projectcss.p,
                      projectcss.__wab_text,
                      sty.p__hbVbi
                    )}
                  >
                    {hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "Vigorous activity may increase blood flow, causing Botox to break down faster. Take \nit easy for the first day to ensure \noptimal results."
                      : "Unlike invasive procedures, Botox integrates smoothly with your natural expressions, creating gradual improvements. With time, your skin looks younger, without disrupting your facial movements."}
                  </p>
                </HowItWorksCard>
              </Stack__>
              <Button
                data-plasmic-name={"postTreatmentGuideButton"}
                data-plasmic-override={overrides.postTreatmentGuideButton}
                className={classNames(
                  "__wab_instance",
                  sty.postTreatmentGuideButton
                )}
                color={"white"}
              >
                {"Learn more"}
              </Button>
            </Stack__>
          </section> */}

          {/* faq 2? */}
          {/* <section
            data-plasmic-name={"faq2Section"}
            data-plasmic-override={overrides.faq2Section}
            className={classNames(projectcss.all, sty.faq2Section)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__kufGp)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__gPvkM
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Frequently"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#D19D51" }}
                    >
                      {" Asked Questions "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"about Botox"}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Frequently"}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ fontStyle: "italic", color: "#D19D51" }}
                    >
                      {" Asked Questions "}
                    </span>
                    <React.Fragment>{""}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"about Botox"}
                    </span>
                  </React.Fragment>
                )}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__mJbsE)}
            >
              <Faq
                answer={
                  "Results from Botox typically start to appear within 3-5 days, with full effects visible at around two weeks. You\u2019ll notice a gradual reduction in lines and smoother skin as the Botox takes effect."
                }
                className={classNames("__wab_instance", sty.faq__rx5Jd)}
                question={"How Soon Will I See Results?"}
              />

              <Faq
                answer={
                  "Most clients find that Botox lasts about 3-4 months. For best results, we recommend scheduling treatments every 3-4 months to maintain a smooth, youthful appearance. Consistent treatments can help \u201ctrain\u201d your muscles to stay relaxed, potentially extending the longevity of your results over time."
                }
                className={classNames("__wab_instance", sty.faq__cfLyn)}
                question={"How Often Should I Get Botox?"}
              />

              <Faq
                answer={
                  "Botox is FDA-approved for several medical uses, including chronic migraines, TMJ (jaw clenching), and excessive sweating (hyperhidrosis). By relaxing specific muscles, Botox can provide relief from these conditions and improve quality of life."
                }
                className={classNames("__wab_instance", sty.faq___8Osar)}
                question={"Can Botox Help with Medical Conditions?"}
              />

              <Faq
                answer={
                  "Not at all! Botox is a popular treatment for both men and women. At ImageLab Medspa, we tailor Botox treatments to meet the unique needs of each client, regardless of gender. Many men choose Botox to achieve a refreshed look and reduce lines without appearing overdone."
                }
                className={classNames("__wab_instance", sty.faq__pCvQl)}
                question={"Is Botox Only for Women?"}
              />
            </Stack__>
          </section> */}

          {/* join the club section */}
          {/* <section
            data-plasmic-name={"joinTheClubSection"}
            data-plasmic-override={overrides.joinTheClubSection}
            className={classNames(projectcss.all, sty.joinTheClubSection)}
          >
            <div className={classNames(projectcss.all, sty.freeBox___6J4Pq)}>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__wtnAx)}
                displayHeight={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "255px"
                    : "auto"
                }
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "242px"
                    : "auto"
                }
                loading={"lazy"}
                src={
                  hasVariant(globalVariants, "screen", "mobileOnly")
                    ? {
                        src: "/plasmic/image_lab_2024/images/imagePng16.png",
                        fullWidth: 485,
                        fullHeight: 511,
                        aspectRatio: undefined
                      }
                    : {
                        src: "/plasmic/image_lab_2024/images/imagePng15.png",
                        fullWidth: 911,
                        fullHeight: 511,
                        aspectRatio: undefined
                      }
                }
              />

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text___3Jz9
                )}
              >
                {"Smooth Skin"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__e0Wgi
                )}
              >
                {"Confidence Boost"}
              </div>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__qrBo9)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__rbJ8Q
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Ready to See\n the Difference?"
                  : "Join the Club"}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__vVhXs
                )}
              >
                {"Sign up for exclusive offers and updates."}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__kKq50
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly")
                  ? "Book your consultation today and let our expert team help you achieve smooth, youthful skin. \nWe tailor each treatment to enhance your natural beauty, ensuring subtle, long-lasting results that boost your confidence."
                  : 'You agree to subscribe to our newsletter and receive periodic updates, news, and special offers from ImageLab Med Spa. You may unsubscribe at any time by clicking the "unsubscribe" link at the bottom of our emails.'}
              </div>
              <Button
                data-plasmic-name={"joinTheClubButton"}
                data-plasmic-override={overrides.joinTheClubButton}
                className={classNames("__wab_instance", sty.joinTheClubButton)}
                color={"white"}
              >
                {"Book My Consultation Now"}
              </Button>
            </div>
          </section> */}

          {/* how long do results last */}
          {/* <Stack__
            as={"section"}
            data-plasmic-name={"botoxResultsSection"}
            data-plasmic-override={overrides.botoxResultsSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.botoxResultsSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__oZwOt)}
            >
              <BotoxResultCard
                data-plasmic-name={"resultCard"}
                data-plasmic-override={overrides.resultCard}
                className={classNames("__wab_instance", sty.resultCard)}
                data={(() => {
                  try {
                    return $state.botoxResultsList.find(
                      item => item.title === $state.botoxResultArea
                    );
                  } catch (e) {
                    if (
                      e instanceof TypeError ||
                      e?.plasmicType === "PlasmicUndefinedDataError"
                    ) {
                      return undefined;
                    }
                    throw e;
                  }
                })()}
              />
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9Yv7W)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__veN5E)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__vMCv2
                  )}
                >
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"How Long Do Botox"}
                    </span>
                    <React.Fragment>{" \n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#9a7f71", fontStyle: "italic" }}
                    >
                      {"Results Last?"}
                    </span>
                  </React.Fragment>
                </div>
                <TextToggler
                  className={classNames(
                    "__wab_instance",
                    sty.textToggler___5LRfG
                  )}
                  height={"120px"}
                  text={
                    "On average, Botox results last between 3 to 4 months. The duration varies based on factors like the treatment area, your metabolism, and how expressive your facial muscles are. For first-time users, results may fade slightly faster, while those with consistent Botox treatments may find their results lasting longer over time."
                  }
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__njIi3
                  )}
                >
                  {
                    "On average, Botox results last between 3 to 4 months. The duration varies based on factors like the treatment area, your metabolism, and how expressive your facial muscles are. For first-time users, results may fade slightly faster, while those with consistent Botox treatments may find their results lasting longer over time."
                  }
                </div>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__dKsGm)}
              >
                {(_par => (!_par ? [] : Array.isArray(_par) ? _par : [_par]))(
                  (() => {
                    try {
                      return $state.botoxResultsList;
                    } catch (e) {
                      if (
                        e instanceof TypeError ||
                        e?.plasmicType === "PlasmicUndefinedDataError"
                      ) {
                        return [];
                      }
                      throw e;
                    }
                  })()
                ).map((__plasmic_item_0, __plasmic_idx_0) => {
                  const currentItem = __plasmic_item_0;
                  const currentIndex = __plasmic_idx_0;
                  return (
                    <SelectPill
                      className={classNames("__wab_instance")}
                      handleClick={async () => {
                        const $steps = {};
                        $steps["updateBotoxResultArea"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["botoxResultArea"]
                                },
                                operation: 0,
                                value: currentItem.title
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;
                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateBotoxResultArea"] != null &&
                          typeof $steps["updateBotoxResultArea"] === "object" &&
                          typeof $steps["updateBotoxResultArea"].then ===
                            "function"
                        ) {
                          $steps["updateBotoxResultArea"] = await $steps[
                            "updateBotoxResultArea"
                          ];
                        }
                      }}
                      key={currentIndex}
                      selected={(() => {
                        try {
                          return currentItem.title === $state.botoxResultArea;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return [];
                          }
                          throw e;
                        }
                      })()}
                      value={(() => {
                        try {
                          return currentItem.title;
                        } catch (e) {
                          if (
                            e instanceof TypeError ||
                            e?.plasmicType === "PlasmicUndefinedDataError"
                          ) {
                            return undefined;
                          }
                          throw e;
                        }
                      })()}
                    />
                  );
                })}
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? true
                  : hasVariant(globalVariants, "screen", "midsize")
                  ? true
                  : false
              ) ? (
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__fsHi)}
                >
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__xomq3)}
                  >
                    <SelectPill
                      className={classNames("__wab_instance")}
                      handleClick={async () => {
                        const $steps = {};
                        $steps["updateBotoxResultArea"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["botoxResultArea"]
                                },
                                operation: 0,
                                value: "Metabolism"
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;
                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateBotoxResultArea"] != null &&
                          typeof $steps["updateBotoxResultArea"] === "object" &&
                          typeof $steps["updateBotoxResultArea"].then ===
                            "function"
                        ) {
                          $steps["updateBotoxResultArea"] = await $steps[
                            "updateBotoxResultArea"
                          ];
                        }
                      }}
                      selected={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? (() => {
                              try {
                                return "Metabolism" === $state.botoxResultArea;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                          : (() => {
                              try {
                                return "Metabolism" === $state.botoxResultArea;
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                      }
                      value={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Metabolism"
                          : "Metabolism"
                      }
                    />

                    <SelectPill
                      className={classNames("__wab_instance")}
                      handleClick={async () => {
                        const $steps = {};
                        $steps["updateBotoxResultArea"] = true
                          ? (() => {
                              const actionArgs = {
                                variable: {
                                  objRoot: $state,
                                  variablePath: ["botoxResultArea"]
                                },
                                operation: 0,
                                value: "Treatment Area"
                              };
                              return (({
                                variable,
                                value,
                                startIndex,
                                deleteCount
                              }) => {
                                if (!variable) {
                                  return;
                                }
                                const { objRoot, variablePath } = variable;
                                $stateSet(objRoot, variablePath, value);
                                return value;
                              })?.apply(null, [actionArgs]);
                            })()
                          : undefined;
                        if (
                          $steps["updateBotoxResultArea"] != null &&
                          typeof $steps["updateBotoxResultArea"] === "object" &&
                          typeof $steps["updateBotoxResultArea"].then ===
                            "function"
                        ) {
                          $steps["updateBotoxResultArea"] = await $steps[
                            "updateBotoxResultArea"
                          ];
                        }
                      }}
                      selected={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? (() => {
                              try {
                                return (
                                  "Treatment Area" === $state.botoxResultArea
                                );
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                          : (() => {
                              try {
                                return (
                                  "Treatment Area" === $state.botoxResultArea
                                );
                              } catch (e) {
                                if (
                                  e instanceof TypeError ||
                                  e?.plasmicType === "PlasmicUndefinedDataError"
                                ) {
                                  return [];
                                }
                                throw e;
                              }
                            })()
                      }
                      value={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "Treatment Area"
                          : "Treatment Area"
                      }
                    />
                  </Stack__>
                  <SelectPill
                    className={classNames("__wab_instance")}
                    handleClick={async () => {
                      const $steps = {};
                      $steps["updateBotoxResultArea"] = true
                        ? (() => {
                            const actionArgs = {
                              variable: {
                                objRoot: $state,
                                variablePath: ["botoxResultArea"]
                              },
                              operation: 0,
                              value: "Aftercare and Lifestyle"
                            };
                            return (({
                              variable,
                              value,
                              startIndex,
                              deleteCount
                            }) => {
                              if (!variable) {
                                return;
                              }
                              const { objRoot, variablePath } = variable;
                              $stateSet(objRoot, variablePath, value);
                              return value;
                            })?.apply(null, [actionArgs]);
                          })()
                        : undefined;
                      if (
                        $steps["updateBotoxResultArea"] != null &&
                        typeof $steps["updateBotoxResultArea"] === "object" &&
                        typeof $steps["updateBotoxResultArea"].then ===
                          "function"
                      ) {
                        $steps["updateBotoxResultArea"] = await $steps[
                          "updateBotoxResultArea"
                        ];
                      }
                    }}
                    selected={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? (() => {
                            try {
                              return (
                                "Aftercare and Lifestyle" ===
                                $state.botoxResultArea
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                        : (() => {
                            try {
                              return (
                                "Aftercare and Lifestyle" ===
                                $state.botoxResultArea
                              );
                            } catch (e) {
                              if (
                                e instanceof TypeError ||
                                e?.plasmicType === "PlasmicUndefinedDataError"
                              ) {
                                return [];
                              }
                              throw e;
                            }
                          })()
                    }
                    value={
                      hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Aftercare and Lifestyle"
                        : "Aftercare and Lifestyle"
                    }
                  />
                </Stack__>
              ) : null}
            </Stack__>
          </Stack__> */}

          {/* is botox safe */}
          {/* <Stack__
            as={"section"}
            data-plasmic-name={"isBotoxSafeSection"}
            data-plasmic-override={overrides.isBotoxSafeSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.isBotoxSafeSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__v99Kn)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__qZkcd)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__eg07R)}
                >
                  <div
                    data-plasmic-name={"heading10"}
                    data-plasmic-override={overrides.heading10}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.heading10
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{"Is Botox "}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic", color: "#D19D51" }}
                      >
                        {"Safe?"}
                      </span>
                    </React.Fragment>
                  </div>
                  <div
                    data-plasmic-name={"supportingText9"}
                    data-plasmic-override={overrides.supportingText9}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.supportingText9
                    )}
                  >
                    {"Addressing Common Concerns"}
                  </div>
                </Stack__>
                <div
                  data-plasmic-name={"supportingText10"}
                  data-plasmic-override={overrides.supportingText10}
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.supportingText10
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Botox is a safe, non-invasive treatment that smooths wrinkles and prevents signs of aging, delivering natural, long-lasting results. Tailored to your unique facial structure, it offers a refreshed, youthful look with minimal downtime, enhancing your beauty and boosting your confidence."
                    : "Botox is a safe, non-invasive treatment that smooths wrinkles and prevents signs of aging, delivering natural, long-lasting results. Tailored to your unique facial structure, it offers a refreshed, youthful look with minimal downtime, enhancing your beauty and boosting your confidence."}
                </div>
              </Stack__>
              <PlasmicImg__
                alt={""}
                className={classNames(sty.img__jTuEx)}
                displayHeight={"auto"}
                displayMaxHeight={"none"}
                displayMaxWidth={"100%"}
                displayMinHeight={"0"}
                displayMinWidth={"0"}
                displayWidth={"auto"}
                loading={"lazy"}
                src={{
                  src: "/plasmic/image_lab_2024/images/imagePng8.png",
                  fullWidth: 686,
                  fullHeight: 400,
                  aspectRatio: undefined
                }}
              />

              <div className={classNames(projectcss.all, sty.freeBox___5F1Wc)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__aViR)}
                  displayHeight={"auto"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"auto"}
                  loading={"lazy"}
                />

                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__gqoDa
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 500 }}
                      >
                        {"Possible Side Effects: "}
                      </span>
                      <React.Fragment>
                        {
                          "Common side effects include minor bruising, swelling at the injection site, and, in rare cases, headaches or mild flu-like symptoms. These typically fade within a few days. More serious side effects, such as drooping eyelids, are rare and often related to improper technique, underscoring the importance of choosing a qualified provider."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontWeight: 500 }}
                      >
                        {"Possible Side Effects:"}
                      </span>
                      <React.Fragment>
                        {
                          " Common side effects include minor bruising, swelling at the injection site, and, in rare cases, headaches or mild flu-like symptoms. These typically fade within a few days. More serious side effects, such as drooping eyelids, are rare and often related to improper technique, underscoring the importance of choosing a qualified provider."
                        }
                      </React.Fragment>
                    </React.Fragment>
                  )}
                </div>
              </div>
            </Stack__>
            <div className={classNames(projectcss.all, sty.freeBox__xP5Dv)} />
          </Stack__> */}

          {/* is botox right for you */}
          {/* <section
            data-plasmic-name={"isBotoxRightSection"}
            data-plasmic-override={overrides.isBotoxRightSection}
            className={classNames(projectcss.all, sty.isBotoxRightSection)}
          >
            <Stack__
              as={"div"}
              data-plasmic-name={"isBotoxRightHeader"}
              data-plasmic-override={overrides.isBotoxRightHeader}
              hasGap={true}
              className={classNames(projectcss.all, sty.isBotoxRightHeader)}
            >
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__nDUsm
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Is Botox Right"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#9a7f71", fontStyle: "italic" }}
                    >
                      {"for You?"}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#080909" }}
                    >
                      {"Is Botox Right"}
                    </span>
                    <React.Fragment> </React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#9a7f71", fontStyle: "italic" }}
                    >
                      {"for You?"}
                    </span>
                  </React.Fragment>
                )}
              </div>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__cBFwh
                )}
              >
                {
                  "Before opting for Botox, it\u2019s essential to understand what the treatment can and cannot do. Here are some factors to help you determine if Botox aligns with your goals:"
                }
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              data-plasmic-name={"isBotoxRightContent"}
              data-plasmic-override={overrides.isBotoxRightContent}
              hasGap={true}
              className={classNames(
                projectcss.all,
                sty.isBotoxRightContent,
                "hide-scrollbar"
              )}
            >
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard__c2E3P
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___3BDtp)}
                    displayHeight={"24px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"24px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/starsSvg3.svg",
                      fullWidth: 24,
                      fullHeight: 25,
                      aspectRatio: 0.96
                    }}
                  />
                }
                image={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__c53Xu)}
                    displayHeight={"146px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng32.png",
                      fullWidth: 758,
                      fullHeight: 513,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___2CzsT
                    )}
                  >
                    {"Targeted Wrinkle Type"}
                  </div>
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text___7AIje
                  )}
                >
                  {
                    "Botox is most effective on dynamic wrinkles caused by repetitive facial movements, like frown lines, forehead creases, and crow\u2019s feet. If your primary concerns are fine lines and wrinkles that form with movement, Botox may be an ideal choice."
                  }
                </div>
              </HowItWorksCard>
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard__iXhG6
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__bfzB6)}
                    displayHeight={"24px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"24px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/timeSvg2.svg",
                      fullWidth: 24,
                      fullHeight: 25,
                      aspectRatio: 0.96
                    }}
                  />
                }
                image={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img___6PGvz)}
                    displayHeight={"146px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng33.png",
                      fullWidth: 758,
                      fullHeight: 513,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___87NBt
                    )}
                  >
                    {"Preventative Goals"}
                  </div>
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__cmtrk
                  )}
                >
                  {
                    "Botox is popular among younger clients as a preventative measure. Starting in your 20s or 30s can help delay the formation of deeper wrinkles, preserving a youthful look over time."
                  }
                </div>
              </HowItWorksCard>
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard__awWuZ
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__fkiTa)}
                    displayHeight={"24px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"24px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/face2Svg2.svg",
                      fullWidth: 24,
                      fullHeight: 25,
                      aspectRatio: 0.96
                    }}
                  />
                }
                image={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__x1Bii)}
                    displayHeight={"146px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng34.png",
                      fullWidth: 776,
                      fullHeight: 513,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__skGm
                    )}
                  >
                    {"Natural Expectations"}
                  </div>
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__mTv6
                  )}
                >
                  {
                    "Botox provides subtle enhancements, not drastic changes. If you\u2019re seeking a natural improvement without altering your facial expressions, Botox could be a good fit."
                  }
                </div>
              </HowItWorksCard>
              <HowItWorksCard
                className={classNames(
                  "__wab_instance",
                  sty.howItWorksCard__w1GiC
                )}
                icon={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__gk7NQ)}
                    displayHeight={"24px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"24px"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/hairSvg.svg",
                      fullWidth: 24,
                      fullHeight: 24,
                      aspectRatio: 1
                    }}
                  />
                }
                image={
                  <PlasmicImg__
                    alt={""}
                    className={classNames(sty.img__jzxW)}
                    displayHeight={"146px"}
                    displayMaxHeight={"none"}
                    displayMaxWidth={"100%"}
                    displayMinHeight={"0"}
                    displayMinWidth={"0"}
                    displayWidth={"100%"}
                    loading={"lazy"}
                    src={{
                      src: "/plasmic/image_lab_2024/images/imagePng35.png",
                      fullWidth: 758,
                      fullHeight: 512,
                      aspectRatio: undefined
                    }}
                  />
                }
                title={
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__mfmmH
                    )}
                  >
                    {"Commitment to Maintenance"}
                  </div>
                }
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__ksx49
                  )}
                >
                  {
                    "Botox is temporary, lasting about 3-4 months. If you\u2019re open to regular follow-up treatments, Botox can be a great addition to your beauty routine."
                  }
                </div>
              </HowItWorksCard>
            </Stack__>
          </section> */}

          {/* benefits of botox */}
          {/* <section
            data-plasmic-name={"benefitsOfBotoxSection"}
            data-plasmic-override={overrides.benefitsOfBotoxSection}
            className={classNames(projectcss.all, sty.benefitsOfBotoxSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__yD9Qq)}
            >
              <Stack__
                as={"div"}
                data-plasmic-name={"benefitsOfBotoxHeader"}
                data-plasmic-override={overrides.benefitsOfBotoxHeader}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.benefitsOfBotoxHeader
                )}
              >
                <h2
                  className={classNames(
                    projectcss.all,
                    projectcss.h2,
                    projectcss.__wab_text,
                    sty.h2__wqj6R
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Benefits of"}
                      </span>
                      <React.Fragment>{"\n"}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Botox Procedure for "}
                      </span>
                      <React.Fragment>{""}</React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#9a7f71", fontStyle: "italic" }}
                      >
                        {"Radiant, Confident You"}
                      </span>
                    </React.Fragment>
                  ) : (
                    <React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ color: "#080909" }}
                      >
                        {"Benefits of Botox Procedure for a"}
                      </span>
                      <React.Fragment> </React.Fragment>
                      <span
                        className={"plasmic_default__all plasmic_default__span"}
                        style={{ fontStyle: "italic", color: "#9a7f71" }}
                      >
                        {"Radiant, Confident You"}
                      </span>
                    </React.Fragment>
                  )}
                </h2>
                <p
                  className={classNames(
                    projectcss.all,
                    projectcss.p,
                    projectcss.__wab_text,
                    sty.p__d1OAm
                  )}
                >
                  {hasVariant(globalVariants, "screen", "mobileOnly")
                    ? "Smooth wrinkles with natural results\nand minimal downtime."
                    : "Smooth wrinkles with natural results and minimal downtime."}
                </p>
              </Stack__>
              {(
                hasVariant(globalVariants, "screen", "mobileOnly")
                  ? false
                  : true
              ) ? (
                <Stack__
                  as={"div"}
                  data-plasmic-name={"benefitsOfBotoxCards"}
                  data-plasmic-override={overrides.benefitsOfBotoxCards}
                  hasGap={true}
                  className={classNames(
                    projectcss.all,
                    sty.benefitsOfBotoxCards,
                    hasVariant(globalVariants, "screen", "mobileOnly")
                      ? "how-botox-works-cards"
                      : undefined
                  )}
                >
                  <BenefitsOfBotoxCard
                    className={classNames(
                      "__wab_instance",
                      sty.benefitsOfBotoxCard___8NOwx
                    )}
                    slot={
                      <div
                        data-plasmic-name={"supportingText12"}
                        data-plasmic-override={overrides.supportingText12}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText12
                        )}
                      >
                        {
                          "Botox softens wrinkles and fine lines for a refreshed, youthful appearance that looks completely natural. Our expert team ensures a subtle enhancement tailored to your unique features."
                        }
                      </div>
                    }
                    title={
                      <div
                        data-plasmic-name={"text2"}
                        data-plasmic-override={overrides.text2}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text2
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Natural-Looking"}
                          </span>
                          <React.Fragment>{" Results"}</React.Fragment>
                        </React.Fragment>
                      </div>
                    }
                  />

                  <BenefitsOfBotoxCard
                    className={classNames(
                      "__wab_instance",
                      sty.benefitsOfBotoxCard__zGwHq
                    )}
                    icon={
                      <TimeSvgIcon
                        className={classNames(projectcss.all, sty.svg__k3VXt)}
                        role={"img"}
                      />
                    }
                    slot={
                      <div
                        data-plasmic-name={"supportingText13"}
                        data-plasmic-override={overrides.supportingText13}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText13
                        )}
                      >
                        {
                          "Botox treatments are fast, taking as little as 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                        }
                      </div>
                    }
                    title={
                      <div
                        data-plasmic-name={"text3"}
                        data-plasmic-override={overrides.text3}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text3
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Quick & Convenient"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  />

                  <BenefitsOfBotoxCard
                    className={classNames(
                      "__wab_instance",
                      sty.benefitsOfBotoxCard__wksbv
                    )}
                    icon={
                      <Face2SvgIcon
                        className={classNames(projectcss.all, sty.svg__gi1B3)}
                        role={"img"}
                      />
                    }
                    slot={
                      <div
                        data-plasmic-name={"supportingText14"}
                        data-plasmic-override={overrides.supportingText14}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText14
                        )}
                      >
                        {
                          "A single Botox treatment provides results that can last up to 4 months, keeping your skin smooth and youthful for longer. Regular treatments help maintain your look effortlessly over time."
                        }
                      </div>
                    }
                    title={
                      <div
                        data-plasmic-name={"text4"}
                        data-plasmic-override={overrides.text4}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text4
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Long-Lasting "}
                          </span>
                          <React.Fragment>{"Effects"}</React.Fragment>
                        </React.Fragment>
                      </div>
                    }
                  />

                  <BenefitsOfBotoxCard
                    className={classNames(
                      "__wab_instance",
                      sty.benefitsOfBotoxCard__o1Xu8
                    )}
                    icon={
                      <HeartSvg3Icon
                        className={classNames(projectcss.all, sty.svg__f8Ns5)}
                        role={"img"}
                      />
                    }
                    slot={
                      <div
                        data-plasmic-name={"supportingText18"}
                        data-plasmic-override={overrides.supportingText18}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.supportingText18
                        )}
                      >
                        {
                          "Botox not only reduces existing wrinkles but also helps prevent new ones from forming by relaxing facial muscles. It\u2019s a proactive approach to maintaining your youthful glow for years to come."
                        }
                      </div>
                    }
                    title={
                      <div
                        data-plasmic-name={"text8"}
                        data-plasmic-override={overrides.text8}
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text8
                        )}
                      >
                        <React.Fragment>
                          <span
                            className={
                              "plasmic_default__all plasmic_default__span"
                            }
                            style={{ fontWeight: 700 }}
                          >
                            {"Preventative Care"}
                          </span>
                        </React.Fragment>
                      </div>
                    }
                  />
                </Stack__>
              ) : null}
              <Stack__
                as={"div"}
                data-plasmic-name={"benefitsOfBotoxCardsMobile"}
                data-plasmic-override={overrides.benefitsOfBotoxCardsMobile}
                hasGap={true}
                className={classNames(
                  projectcss.all,
                  sty.benefitsOfBotoxCardsMobile,
                  "how-botox-works-cards"
                )}
              >
                <BenefitsOfBotoxCard
                  className={classNames(
                    "__wab_instance",
                    sty.benefitsOfBotoxCard__fWOzA
                  )}
                  slot={
                    <div
                      data-plasmic-name={"supportingText15"}
                      data-plasmic-override={overrides.supportingText15}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText15
                      )}
                    >
                      {
                        "Botox softens wrinkles and fine lines for a refreshed, youthful appearance that looks completely natural. Our expert team ensures a subtle enhancement tailored to your unique features."
                      }
                    </div>
                  }
                  title={
                    <div
                      data-plasmic-name={"text5"}
                      data-plasmic-override={overrides.text5}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text5
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Natural-Looking"}
                        </span>
                        <React.Fragment>{" Results"}</React.Fragment>
                      </React.Fragment>
                    </div>
                  }
                />

                <BenefitsOfBotoxCard
                  className={classNames(
                    "__wab_instance",
                    sty.benefitsOfBotoxCard__pkMZh
                  )}
                  icon={
                    <TimeSvg3Icon
                      className={classNames(projectcss.all, sty.svg__pUPpd)}
                      role={"img"}
                    />
                  }
                  slot={
                    <div
                      data-plasmic-name={"supportingText6"}
                      data-plasmic-override={overrides.supportingText6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText6
                      )}
                    >
                      {
                        "Botox treatments are fast, taking as little as 10 minutes, making it easy to fit into even the busiest schedule. With no significant downtime, you can return to your day right after your appointment."
                      }
                    </div>
                  }
                  title={
                    <div
                      data-plasmic-name={"text6"}
                      data-plasmic-override={overrides.text6}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text6
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Quick & Convenient"}
                        </span>
                      </React.Fragment>
                    </div>
                  }
                />

                <BenefitsOfBotoxCard
                  className={classNames(
                    "__wab_instance",
                    sty.benefitsOfBotoxCard__dNrRw
                  )}
                  icon={
                    <IconFace2Icon
                      className={classNames(projectcss.all, sty.svg___4Yc0S)}
                      role={"img"}
                    />
                  }
                  slot={
                    <div
                      data-plasmic-name={"supportingText7"}
                      data-plasmic-override={overrides.supportingText7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText7
                      )}
                    >
                      {
                        "A single Botox treatment provides results that can last up to 4 months, keeping your skin smooth and youthful for longer. Regular treatments help maintain your look effortlessly over time."
                      }
                    </div>
                  }
                  title={
                    <div
                      data-plasmic-name={"text7"}
                      data-plasmic-override={overrides.text7}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text7
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Long-Lasting"}
                        </span>
                        <React.Fragment>{" Effects"}</React.Fragment>
                      </React.Fragment>
                    </div>
                  }
                />

                <BenefitsOfBotoxCard
                  className={classNames(
                    "__wab_instance",
                    sty.benefitsOfBotoxCard__bn72K
                  )}
                  icon={
                    <HeartSvg4Icon
                      className={classNames(projectcss.all, sty.svg___5GP77)}
                      role={"img"}
                    />
                  }
                  slot={
                    <div
                      data-plasmic-name={"supportingText16"}
                      data-plasmic-override={overrides.supportingText16}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText16
                      )}
                    >
                      {
                        "Botox not only reduces existing wrinkles but also helps prevent new ones from forming by relaxing facial muscles. It\u2019s a proactive approach to maintaining your youthful glow for years to come."
                      }
                    </div>
                  }
                  title={
                    <div
                      data-plasmic-name={"text9"}
                      data-plasmic-override={overrides.text9}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text9
                      )}
                    >
                      <React.Fragment>
                        <span
                          className={
                            "plasmic_default__all plasmic_default__span"
                          }
                          style={{ fontWeight: 700 }}
                        >
                          {"Preventative Care"}
                        </span>
                      </React.Fragment>
                    </div>
                  }
                />
              </Stack__>
            </Stack__>
          </section> */}

          {/* what is botox and how does it work */}
          {/* <Stack__
            as={"section"}
            data-plasmic-name={"whatIsBotoxSection"}
            data-plasmic-override={overrides.whatIsBotoxSection}
            hasGap={true}
            className={classNames(projectcss.all, sty.whatIsBotoxSection)}
          >
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox___9V4GE)}
            >
              <div
                data-plasmic-name={"heading6"}
                data-plasmic-override={overrides.heading6}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.heading6
                )}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ fontStyle: "italic", color: "#D19D51" }}
                  >
                    {"What Is Botox"}
                  </span>
                  <React.Fragment> </React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "#080909" }}
                  >
                    {"and \nHow Does It Work?"}
                  </span>
                </React.Fragment>
              </div>
              <div
                data-plasmic-name={"supportingText5"}
                data-plasmic-override={overrides.supportingText5}
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.supportingText5
                )}
              >
                {hasVariant(globalVariants, "screen", "mobileOnly") ? (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#434445" }}
                    >
                      {"Botox, short for Botulinum Toxin Type A,"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#434445" }}
                    >
                      {"is a neurotoxin derived from"}
                    </span>
                    <React.Fragment>{"\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#434445" }}
                    >
                      {"Clostridium botulinum. "}
                    </span>
                  </React.Fragment>
                ) : (
                  <React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "#434445" }}
                    >
                      {
                        "Botox, short for Botulinum Toxin Type A, is a neurotoxin derived from Clostridium botulinum. "
                      }
                    </span>
                  </React.Fragment>
                )}
              </div>
            </Stack__>
            <Stack__
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.freeBox__ilt4D)}
            >
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__asLdy)}
              >
                <Stack__
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__rGvkf)}
                >
                  <div
                    data-plasmic-name={"whatIsBotoxMobileText"}
                    data-plasmic-override={overrides.whatIsBotoxMobileText}
                    className={classNames(
                      projectcss.all,
                      sty.whatIsBotoxMobileText
                    )}
                  >
                    <TextToggler
                      className={classNames(
                        "__wab_instance",
                        sty.textToggler__ekCr
                      )}
                      height={"140px"}
                      text={
                        "Despite its intimidating name, Botox is FDA-approved and widely used in medical and aesthetic treatments. By temporarily blocking signals from nerves to muscles, Botox prevents these muscles from contracting.<br> <br> This relaxation smooths the skin and reduces the appearance of wrinkles, making it an effective treatment for fine lines and dynamic wrinkles caused by repeated facial expressions."
                      }
                    />
                  </div>
                  <div
                    className={classNames(projectcss.all, sty.freeBox__tstww)}
                  >
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__iigR
                      )}
                    >
                      {"Science Behind Botox"}
                    </div>
                    <Stack__
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___3NXhV
                      )}
                    >
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title20"}
                        data-plasmic-override={overrides.title20}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title20)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__lVZh)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__iHtP
                          )}
                        >
                          {
                            "Botox is FDA-approved and trusted worldwide for both medical and aesthetic uses. This remarkable treatment works by temporarily relaxing targeted muscles, helping to reduce the appearance of fine lines and wrinkles caused by repeated facial expressions."
                          }
                        </div>
                      </Stack__>
                      <Stack__
                        as={"div"}
                        data-plasmic-name={"title21"}
                        data-plasmic-override={overrides.title21}
                        hasGap={true}
                        className={classNames(projectcss.all, sty.title21)}
                      >
                        <PointIcon
                          className={classNames(projectcss.all, sty.svg__zfHU)}
                          role={"img"}
                        />

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__azzsu
                          )}
                        >
                          {
                            "Whether you\u2019re looking to soften crow\u2019s feet, forehead lines, or frown lines, Botox offers a safe and effective solution for achieving a rejuvenated appearance."
                          }
                        </div>
                      </Stack__>
                    </Stack__>
                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text___9KZd
                      )}
                    >
                      {
                        "Here\u2019s how it works: Botox blocks nerve signals to specific muscles, preventing them from contracting. By targeting the neuromuscular junction, it inhibits the release of acetylcholine\u2014a neurotransmitter that triggers muscle movement. This temporary \u201cfreeze\u201d allows the skin above these muscles to appear smoother and more refreshed."
                      }
                    </div>
                  </div>
                </Stack__>
                <Button
                  data-plasmic-name={"whatIsBotoxButton"}
                  data-plasmic-override={overrides.whatIsBotoxButton}
                  className={classNames(
                    "__wab_instance",
                    sty.whatIsBotoxButton
                  )}
                >
                  {"Book Now"}
                </Button>
              </Stack__>
              <Stack__
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox___9QOqV)}
              >
                <div className={classNames(projectcss.all, sty.freeBox__xG7Va)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1W2Th)}
                  >
                    <PlasmicImg__
                      alt={""}
                      className={classNames(sty.img___2GbSe)}
                      displayHeight={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "200px"
                          : hasVariant(globalVariants, "screen", "midsize")
                          ? "100%"
                          : "auto"
                      }
                      displayMaxHeight={"none"}
                      displayMaxWidth={"100%"}
                      displayMinHeight={"0"}
                      displayMinWidth={"0"}
                      displayWidth={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? "100%"
                          : hasVariant(globalVariants, "screen", "midsize")
                          ? "100%"
                          : "650px"
                      }
                      loading={"lazy"}
                      src={
                        hasVariant(globalVariants, "screen", "mobileOnly")
                          ? {
                              src: "/plasmic/image_lab_2024/images/imagePng65.png",
                              fullWidth: 686,
                              fullHeight: 400,
                              aspectRatio: undefined
                            }
                          : {
                              src: "/plasmic/image_lab_2024/images/imagePng66.png",
                              fullWidth: 1300,
                              fullHeight: 1036,
                              aspectRatio: undefined
                            }
                      }
                    />
                  </div>
                  <Stack__
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__gu8Ol)}
                  >
                    <div
                      data-plasmic-name={"supportingText3"}
                      data-plasmic-override={overrides.supportingText3}
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.supportingText3
                      )}
                    >
                      {"Science Behind Botox"}
                    </div>
                    <span
                      data-plasmic-name={"supportingText4"}
                      data-plasmic-override={overrides.supportingText4}
                      className={classNames(
                        projectcss.all,
                        projectcss.span,
                        projectcss.__wab_text,
                        sty.supportingText4
                      )}
                    >
                      {hasVariant(globalVariants, "screen", "mobileOnly")
                        ? "Botox works by targeting the neuromuscular junction, where it inhibits the release of acetylcholine\u2014a neurotransmitter responsible for muscle contractions. This process temporarily \u201cfreezes\u201d the muscle, creating a smoother appearance on the skin's surface."
                        : "Botox works by targeting the neuromuscular junction, where it inhibits the release of acetylcholine\u2014a neurotransmitter responsible for muscle contractions. This process temporarily \u201cfreezes\u201d the muscle, creating a smoother appearance on the skin's surface."}
                    </span>
                  </Stack__>
                </div>
              </Stack__>
            </Stack__>
          </Stack__> */}

        </div>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "topNav",
    "topBotoxServicesSection",
    "prices",
    "heading",
    "price",
    "heading2",
    "heading3",
    "heading4",
    "heading5",
    "h1",
    "supportingText",
    "topBotoxServicesButton",
    "reviewsRatingPill",
    "benefitsOfBotoxSection",
    "benefitsOfBotoxHeader",
    "benefitsOfBotoxCards",
    "text2",
    "supportingText12",
    "text3",
    "supportingText13",
    "text4",
    "supportingText14",
    "text8",
    "supportingText18",
    "benefitsOfBotoxCardsMobile",
    "text5",
    "supportingText15",
    "text6",
    "supportingText6",
    "text7",
    "supportingText7",
    "text9",
    "supportingText16",
    "beforeAfterSection",
    "beforeAfterHeader",
    "beforeAfterSlider",
    "whatIsBotoxSection",
    "heading6",
    "supportingText5",
    "whatIsBotoxMobileText",
    "title20",
    "title21",
    "whatIsBotoxButton",
    "supportingText3",
    "supportingText4",
    "ourBotoxProcessSection",
    "ourBotoxProcessCircle",
    "ourBotoxProcessCircleBg",
    "ourBotoxProcessEllipse1",
    "ourBotoxProcessEllipse2",
    "ourBotoxProcessEllipse3",
    "ourBotoxProcessIcons",
    "ourBotoxProcessNumber",
    "ourBotoxProcessContent",
    "ourBotoxProcessButton",
    "affordableBotoxSection",
    "affordableBotoxButton",
    "faceSection",
    "areasInteractive",
    "botoxResultsSection",
    "resultCard",
    "ctaSection",
    "heading9",
    "supportingText8",
    "ctaButton",
    "isBotoxSafeSection",
    "heading10",
    "supportingText9",
    "supportingText10",
    "isBotoxRightSection",
    "isBotoxRightHeader",
    "isBotoxRightContent",
    "botoxAppointmentSection",
    "title",
    "title2",
    "title3",
    "botoxAppointmentButton",
    "botoxAppointmentMobileButton",
    "afterTheTreatmentSection",
    "afterTheTreatmentButton",
    "ageGroupsSection",
    "ageGroupsCard",
    "chooseBotoxSection",
    "chooseBotoxContent",
    "title4",
    "title5",
    "title6",
    "title7",
    "title8",
    "title9",
    "title10",
    "title11",
    "title12",
    "title13",
    "title14",
    "title15",
    "title16",
    "title17",
    "title18",
    "title19",
    "chooseBotoxImages",
    "faqSection",
    "botoxRisksSection",
    "botoxRisksNumberProgressMobile",
    "botoxRisksProgressBarMobile",
    "botoxRisksContent",
    "botoxRisksNumberProgress",
    "botoxRisksProgressBar",
    "botoxRisksImages",
    "avoidBotoxSection",
    "safetyMeasuresSection",
    "safetyMeasuresHeader",
    "safetyMeasuresContent",
    "botoxMythsSection",
    "botoxMythsSlider",
    "postTreatmentGuideSection",
    "postTreatmentGuideHeader",
    "postTreatmentGuideCards",
    "postTreatmentGuideCardsMobile",
    "postTreatmentGuideButton",
    "faq2Section",
    "ourLocationSection",
    "joinTheClubSection",
    "joinTheClubButton",
    "footerNew"
  ],

  topNav: ["topNav"],
  topBotoxServicesSection: [
    "topBotoxServicesSection",
    "prices",
    "heading",
    "price",
    "heading2",
    "heading3",
    "heading4",
    "heading5",
    "h1",
    "supportingText",
    "topBotoxServicesButton",
    "reviewsRatingPill"
  ],

  prices: ["prices", "heading", "price", "heading2", "heading3", "heading4"],
  heading: ["heading"],
  price: ["price", "heading2", "heading3"],
  heading2: ["heading2"],
  heading3: ["heading3"],
  heading4: ["heading4"],
  heading5: ["heading5", "h1"],
  h1: ["h1"],
  supportingText: ["supportingText"],
  topBotoxServicesButton: ["topBotoxServicesButton"],
  reviewsRatingPill: ["reviewsRatingPill"],
  benefitsOfBotoxSection: [
    "benefitsOfBotoxSection",
    "benefitsOfBotoxHeader",
    "benefitsOfBotoxCards",
    "text2",
    "supportingText12",
    "text3",
    "supportingText13",
    "text4",
    "supportingText14",
    "text8",
    "supportingText18",
    "benefitsOfBotoxCardsMobile",
    "text5",
    "supportingText15",
    "text6",
    "supportingText6",
    "text7",
    "supportingText7",
    "text9",
    "supportingText16"
  ],

  benefitsOfBotoxHeader: ["benefitsOfBotoxHeader"],
  benefitsOfBotoxCards: [
    "benefitsOfBotoxCards",
    "text2",
    "supportingText12",
    "text3",
    "supportingText13",
    "text4",
    "supportingText14",
    "text8",
    "supportingText18"
  ],

  text2: ["text2"],
  supportingText12: ["supportingText12"],
  text3: ["text3"],
  supportingText13: ["supportingText13"],
  text4: ["text4"],
  supportingText14: ["supportingText14"],
  text8: ["text8"],
  supportingText18: ["supportingText18"],
  benefitsOfBotoxCardsMobile: [
    "benefitsOfBotoxCardsMobile",
    "text5",
    "supportingText15",
    "text6",
    "supportingText6",
    "text7",
    "supportingText7",
    "text9",
    "supportingText16"
  ],

  text5: ["text5"],
  supportingText15: ["supportingText15"],
  text6: ["text6"],
  supportingText6: ["supportingText6"],
  text7: ["text7"],
  supportingText7: ["supportingText7"],
  text9: ["text9"],
  supportingText16: ["supportingText16"],
  beforeAfterSection: [
    "beforeAfterSection",
    "beforeAfterHeader",
    "beforeAfterSlider"
  ],

  beforeAfterHeader: ["beforeAfterHeader"],
  beforeAfterSlider: ["beforeAfterSlider"],
  whatIsBotoxSection: [
    "whatIsBotoxSection",
    "heading6",
    "supportingText5",
    "whatIsBotoxMobileText",
    "title20",
    "title21",
    "whatIsBotoxButton",
    "supportingText3",
    "supportingText4"
  ],

  heading6: ["heading6"],
  supportingText5: ["supportingText5"],
  whatIsBotoxMobileText: ["whatIsBotoxMobileText"],
  title20: ["title20"],
  title21: ["title21"],
  whatIsBotoxButton: ["whatIsBotoxButton"],
  supportingText3: ["supportingText3"],
  supportingText4: ["supportingText4"],
  ourBotoxProcessSection: [
    "ourBotoxProcessSection",
    "ourBotoxProcessCircle",
    "ourBotoxProcessCircleBg",
    "ourBotoxProcessEllipse1",
    "ourBotoxProcessEllipse2",
    "ourBotoxProcessEllipse3",
    "ourBotoxProcessIcons",
    "ourBotoxProcessNumber",
    "ourBotoxProcessContent",
    "ourBotoxProcessButton"
  ],

  ourBotoxProcessCircle: ["ourBotoxProcessCircle"],
  ourBotoxProcessCircleBg: [
    "ourBotoxProcessCircleBg",
    "ourBotoxProcessEllipse1",
    "ourBotoxProcessEllipse2",
    "ourBotoxProcessEllipse3"
  ],

  ourBotoxProcessEllipse1: ["ourBotoxProcessEllipse1"],
  ourBotoxProcessEllipse2: ["ourBotoxProcessEllipse2"],
  ourBotoxProcessEllipse3: ["ourBotoxProcessEllipse3"],
  ourBotoxProcessIcons: ["ourBotoxProcessIcons"],
  ourBotoxProcessNumber: ["ourBotoxProcessNumber"],
  ourBotoxProcessContent: ["ourBotoxProcessContent"],
  ourBotoxProcessButton: ["ourBotoxProcessButton"],
  affordableBotoxSection: ["affordableBotoxSection", "affordableBotoxButton"],
  affordableBotoxButton: ["affordableBotoxButton"],
  faceSection: ["faceSection"],
  areasInteractive: ["areasInteractive"],
  botoxResultsSection: ["botoxResultsSection", "resultCard"],
  resultCard: ["resultCard"],
  ctaSection: ["ctaSection", "heading9", "supportingText8", "ctaButton"],
  heading9: ["heading9"],
  supportingText8: ["supportingText8"],
  ctaButton: ["ctaButton"],
  isBotoxSafeSection: [
    "isBotoxSafeSection",
    "heading10",
    "supportingText9",
    "supportingText10"
  ],

  heading10: ["heading10"],
  supportingText9: ["supportingText9"],
  supportingText10: ["supportingText10"],
  isBotoxRightSection: [
    "isBotoxRightSection",
    "isBotoxRightHeader",
    "isBotoxRightContent"
  ],

  isBotoxRightHeader: ["isBotoxRightHeader"],
  isBotoxRightContent: ["isBotoxRightContent"],
  botoxAppointmentSection: [
    "botoxAppointmentSection",
    "title",
    "title2",
    "title3",
    "botoxAppointmentButton",
    "botoxAppointmentMobileButton"
  ],

  title: ["title"],
  title2: ["title2"],
  title3: ["title3"],
  botoxAppointmentButton: ["botoxAppointmentButton"],
  botoxAppointmentMobileButton: ["botoxAppointmentMobileButton"],
  afterTheTreatmentSection: [
    "afterTheTreatmentSection",
    "afterTheTreatmentButton"
  ],

  afterTheTreatmentButton: ["afterTheTreatmentButton"],
  ageGroupsSection: ["ageGroupsSection", "ageGroupsCard"],
  ageGroupsCard: ["ageGroupsCard"],
  chooseBotoxSection: [
    "chooseBotoxSection",
    "chooseBotoxContent",
    "title4",
    "title5",
    "title6",
    "title7",
    "title8",
    "title9",
    "title10",
    "title11",
    "title12",
    "title13",
    "title14",
    "title15",
    "title16",
    "title17",
    "title18",
    "title19",
    "chooseBotoxImages"
  ],

  chooseBotoxContent: [
    "chooseBotoxContent",
    "title4",
    "title5",
    "title6",
    "title7",
    "title8",
    "title9",
    "title10",
    "title11",
    "title12",
    "title13",
    "title14",
    "title15",
    "title16",
    "title17",
    "title18",
    "title19"
  ],

  title4: ["title4"],
  title5: ["title5"],
  title6: ["title6"],
  title7: ["title7"],
  title8: ["title8"],
  title9: ["title9"],
  title10: ["title10"],
  title11: ["title11"],
  title12: ["title12"],
  title13: ["title13"],
  title14: ["title14"],
  title15: ["title15"],
  title16: ["title16"],
  title17: ["title17"],
  title18: ["title18"],
  title19: ["title19"],
  chooseBotoxImages: ["chooseBotoxImages"],
  faqSection: ["faqSection"],
  botoxRisksSection: [
    "botoxRisksSection",
    "botoxRisksNumberProgressMobile",
    "botoxRisksProgressBarMobile",
    "botoxRisksContent",
    "botoxRisksNumberProgress",
    "botoxRisksProgressBar",
    "botoxRisksImages"
  ],

  botoxRisksNumberProgressMobile: ["botoxRisksNumberProgressMobile"],
  botoxRisksProgressBarMobile: ["botoxRisksProgressBarMobile"],
  botoxRisksContent: ["botoxRisksContent"],
  botoxRisksNumberProgress: ["botoxRisksNumberProgress"],
  botoxRisksProgressBar: ["botoxRisksProgressBar"],
  botoxRisksImages: ["botoxRisksImages"],
  avoidBotoxSection: ["avoidBotoxSection"],
  safetyMeasuresSection: [
    "safetyMeasuresSection",
    "safetyMeasuresHeader",
    "safetyMeasuresContent"
  ],

  safetyMeasuresHeader: ["safetyMeasuresHeader"],
  safetyMeasuresContent: ["safetyMeasuresContent"],
  botoxMythsSection: ["botoxMythsSection", "botoxMythsSlider"],
  botoxMythsSlider: ["botoxMythsSlider"],
  postTreatmentGuideSection: [
    "postTreatmentGuideSection",
    "postTreatmentGuideHeader",
    "postTreatmentGuideCards",
    "postTreatmentGuideCardsMobile",
    "postTreatmentGuideButton"
  ],

  postTreatmentGuideHeader: ["postTreatmentGuideHeader"],
  postTreatmentGuideCards: ["postTreatmentGuideCards"],
  postTreatmentGuideCardsMobile: ["postTreatmentGuideCardsMobile"],
  postTreatmentGuideButton: ["postTreatmentGuideButton"],
  faq2Section: ["faq2Section"],
  ourLocationSection: ["ourLocationSection"],
  joinTheClubSection: ["joinTheClubSection", "joinTheClubButton"],
  joinTheClubButton: ["joinTheClubButton"],
  footerNew: ["footerNew"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicBotoxLander2__ArgProps,
          internalVariantPropNames: PlasmicBotoxLander2__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicBotoxLander2__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicBotoxLander2";
  } else {
    func.displayName = `PlasmicBotoxLander2.${nodeName}`;
  }
  return func;
}

export const PlasmicBotoxLander2 = Object.assign(
  // Top-level PlasmicBotoxLander2 renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    topNav: makeNodeComponent("topNav"),
    topBotoxServicesSection: makeNodeComponent("topBotoxServicesSection"),
    prices: makeNodeComponent("prices"),
    heading: makeNodeComponent("heading"),
    price: makeNodeComponent("price"),
    heading2: makeNodeComponent("heading2"),
    heading3: makeNodeComponent("heading3"),
    heading4: makeNodeComponent("heading4"),
    heading5: makeNodeComponent("heading5"),
    h1: makeNodeComponent("h1"),
    supportingText: makeNodeComponent("supportingText"),
    topBotoxServicesButton: makeNodeComponent("topBotoxServicesButton"),
    reviewsRatingPill: makeNodeComponent("reviewsRatingPill"),
    benefitsOfBotoxSection: makeNodeComponent("benefitsOfBotoxSection"),
    benefitsOfBotoxHeader: makeNodeComponent("benefitsOfBotoxHeader"),
    benefitsOfBotoxCards: makeNodeComponent("benefitsOfBotoxCards"),
    text2: makeNodeComponent("text2"),
    supportingText12: makeNodeComponent("supportingText12"),
    text3: makeNodeComponent("text3"),
    supportingText13: makeNodeComponent("supportingText13"),
    text4: makeNodeComponent("text4"),
    supportingText14: makeNodeComponent("supportingText14"),
    text8: makeNodeComponent("text8"),
    supportingText18: makeNodeComponent("supportingText18"),
    benefitsOfBotoxCardsMobile: makeNodeComponent("benefitsOfBotoxCardsMobile"),
    text5: makeNodeComponent("text5"),
    supportingText15: makeNodeComponent("supportingText15"),
    text6: makeNodeComponent("text6"),
    supportingText6: makeNodeComponent("supportingText6"),
    text7: makeNodeComponent("text7"),
    supportingText7: makeNodeComponent("supportingText7"),
    text9: makeNodeComponent("text9"),
    supportingText16: makeNodeComponent("supportingText16"),
    beforeAfterSection: makeNodeComponent("beforeAfterSection"),
    beforeAfterHeader: makeNodeComponent("beforeAfterHeader"),
    beforeAfterSlider: makeNodeComponent("beforeAfterSlider"),
    whatIsBotoxSection: makeNodeComponent("whatIsBotoxSection"),
    heading6: makeNodeComponent("heading6"),
    supportingText5: makeNodeComponent("supportingText5"),
    whatIsBotoxMobileText: makeNodeComponent("whatIsBotoxMobileText"),
    title20: makeNodeComponent("title20"),
    title21: makeNodeComponent("title21"),
    whatIsBotoxButton: makeNodeComponent("whatIsBotoxButton"),
    supportingText3: makeNodeComponent("supportingText3"),
    supportingText4: makeNodeComponent("supportingText4"),
    ourBotoxProcessSection: makeNodeComponent("ourBotoxProcessSection"),
    ourBotoxProcessCircle: makeNodeComponent("ourBotoxProcessCircle"),
    ourBotoxProcessCircleBg: makeNodeComponent("ourBotoxProcessCircleBg"),
    ourBotoxProcessEllipse1: makeNodeComponent("ourBotoxProcessEllipse1"),
    ourBotoxProcessEllipse2: makeNodeComponent("ourBotoxProcessEllipse2"),
    ourBotoxProcessEllipse3: makeNodeComponent("ourBotoxProcessEllipse3"),
    ourBotoxProcessIcons: makeNodeComponent("ourBotoxProcessIcons"),
    ourBotoxProcessNumber: makeNodeComponent("ourBotoxProcessNumber"),
    ourBotoxProcessContent: makeNodeComponent("ourBotoxProcessContent"),
    ourBotoxProcessButton: makeNodeComponent("ourBotoxProcessButton"),
    affordableBotoxSection: makeNodeComponent("affordableBotoxSection"),
    affordableBotoxButton: makeNodeComponent("affordableBotoxButton"),
    faceSection: makeNodeComponent("faceSection"),
    areasInteractive: makeNodeComponent("areasInteractive"),
    botoxResultsSection: makeNodeComponent("botoxResultsSection"),
    resultCard: makeNodeComponent("resultCard"),
    ctaSection: makeNodeComponent("ctaSection"),
    heading9: makeNodeComponent("heading9"),
    supportingText8: makeNodeComponent("supportingText8"),
    ctaButton: makeNodeComponent("ctaButton"),
    isBotoxSafeSection: makeNodeComponent("isBotoxSafeSection"),
    heading10: makeNodeComponent("heading10"),
    supportingText9: makeNodeComponent("supportingText9"),
    supportingText10: makeNodeComponent("supportingText10"),
    isBotoxRightSection: makeNodeComponent("isBotoxRightSection"),
    isBotoxRightHeader: makeNodeComponent("isBotoxRightHeader"),
    isBotoxRightContent: makeNodeComponent("isBotoxRightContent"),
    botoxAppointmentSection: makeNodeComponent("botoxAppointmentSection"),
    title: makeNodeComponent("title"),
    title2: makeNodeComponent("title2"),
    title3: makeNodeComponent("title3"),
    botoxAppointmentButton: makeNodeComponent("botoxAppointmentButton"),
    botoxAppointmentMobileButton: makeNodeComponent(
      "botoxAppointmentMobileButton"
    ),
    afterTheTreatmentSection: makeNodeComponent("afterTheTreatmentSection"),
    afterTheTreatmentButton: makeNodeComponent("afterTheTreatmentButton"),
    ageGroupsSection: makeNodeComponent("ageGroupsSection"),
    ageGroupsCard: makeNodeComponent("ageGroupsCard"),
    chooseBotoxSection: makeNodeComponent("chooseBotoxSection"),
    chooseBotoxContent: makeNodeComponent("chooseBotoxContent"),
    title4: makeNodeComponent("title4"),
    title5: makeNodeComponent("title5"),
    title6: makeNodeComponent("title6"),
    title7: makeNodeComponent("title7"),
    title8: makeNodeComponent("title8"),
    title9: makeNodeComponent("title9"),
    title10: makeNodeComponent("title10"),
    title11: makeNodeComponent("title11"),
    title12: makeNodeComponent("title12"),
    title13: makeNodeComponent("title13"),
    title14: makeNodeComponent("title14"),
    title15: makeNodeComponent("title15"),
    title16: makeNodeComponent("title16"),
    title17: makeNodeComponent("title17"),
    title18: makeNodeComponent("title18"),
    title19: makeNodeComponent("title19"),
    chooseBotoxImages: makeNodeComponent("chooseBotoxImages"),
    faqSection: makeNodeComponent("faqSection"),
    botoxRisksSection: makeNodeComponent("botoxRisksSection"),
    botoxRisksNumberProgressMobile: makeNodeComponent(
      "botoxRisksNumberProgressMobile"
    ),
    botoxRisksProgressBarMobile: makeNodeComponent(
      "botoxRisksProgressBarMobile"
    ),
    botoxRisksContent: makeNodeComponent("botoxRisksContent"),
    botoxRisksNumberProgress: makeNodeComponent("botoxRisksNumberProgress"),
    botoxRisksProgressBar: makeNodeComponent("botoxRisksProgressBar"),
    botoxRisksImages: makeNodeComponent("botoxRisksImages"),
    avoidBotoxSection: makeNodeComponent("avoidBotoxSection"),
    safetyMeasuresSection: makeNodeComponent("safetyMeasuresSection"),
    safetyMeasuresHeader: makeNodeComponent("safetyMeasuresHeader"),
    safetyMeasuresContent: makeNodeComponent("safetyMeasuresContent"),
    botoxMythsSection: makeNodeComponent("botoxMythsSection"),
    botoxMythsSlider: makeNodeComponent("botoxMythsSlider"),
    postTreatmentGuideSection: makeNodeComponent("postTreatmentGuideSection"),
    postTreatmentGuideHeader: makeNodeComponent("postTreatmentGuideHeader"),
    postTreatmentGuideCards: makeNodeComponent("postTreatmentGuideCards"),
    postTreatmentGuideCardsMobile: makeNodeComponent(
      "postTreatmentGuideCardsMobile"
    ),
    postTreatmentGuideButton: makeNodeComponent("postTreatmentGuideButton"),
    faq2Section: makeNodeComponent("faq2Section"),
    ourLocationSection: makeNodeComponent("ourLocationSection"),
    joinTheClubSection: makeNodeComponent("joinTheClubSection"),
    joinTheClubButton: makeNodeComponent("joinTheClubButton"),
    footerNew: makeNodeComponent("footerNew"),
    // Metadata about props expected for PlasmicBotoxLander2
    internalVariantProps: PlasmicBotoxLander2__VariantProps,
    internalArgProps: PlasmicBotoxLander2__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "ImageLab | Botox",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicBotoxLander2;
/* prettier-ignore-end */
